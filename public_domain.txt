=== ./public/components/decorative/AnimatedBalloons.jsx ===
import React from 'react'
import { motion } from 'framer-motion'

/**
 * Componente que genera globos animados para reforzar la temÃ¡tica infantil
 * con movimientos flotantes y colores vibrantes
 */
const AnimatedBalloons = () => {
  const balloons = Array.from({ length: 8 }, (_, i) => ({
    id: i,
    size: Math.random() * 30 + 20,
    x: Math.random() * 100,
    color: [
      'from-red-400 to-red-600',
      'from-blue-400 to-blue-600',
      'from-yellow-400 to-yellow-600',
      'from-green-400 to-green-600',
      'from-pink-400 to-pink-600',
      'from-purple-400 to-purple-600',
    ][Math.floor(Math.random() * 6)],
    duration: Math.random() * 20 + 30,
    delay: Math.random() * 15
  }));

  return (
    <div className="fixed inset-0 z-0 pointer-events-none overflow-hidden">
      {balloons.map((balloon) => (
        <motion.div
          key={balloon.id}
          className={`absolute bg-gradient-to-b ${balloon.color}`}
          style={{
            width: balloon.size,
            height: balloon.size * 1.2,
            left: `${balloon.x}%`,
            bottom: '-10%',
            borderRadius: '50% 50% 50% 50% / 60% 60% 40% 40%',
          }}
          animate={{
            y: [0, -window.innerHeight * 1.2],
            rotate: [0, 10, -10, 5, 0],
            opacity: [0.7, 0.8, 0.7, 0]
          }}
          transition={{
            duration: balloon.duration,
            repeat: Infinity,
            delay: balloon.delay,
            ease: "linear"
          }}
        >
          <div className="absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-full w-0.5 h-16 bg-white/30" />
        </motion.div>
      ))}
    </div>
  );
};

export default AnimatedBalloons;\n\n

=== ./public/components/decorative/BackgroundVideoComponent.jsx ===
import React, { useEffect } from 'react';
import { FiPause, FiPlay } from 'react-icons/fi';
import { motion } from 'framer-motion';
import BackgroundVideo from '@shared/assets/video/background.webm';

const BackgroundVideoComponent = ({ videoRef, isVideoPlaying, toggleVideo }) => {
  useEffect(() => {
    if (!videoRef.current) return;
    
    const videoElement = videoRef.current;
    
    const handlePlay = () => console.log("Video started playing via event");
    const handlePause = () => console.log("Video paused via event");
    const handleError = (e) => console.error("Video error:", e);
    
    videoElement.addEventListener('play', handlePlay);
    videoElement.addEventListener('pause', handlePause);
    videoElement.addEventListener('error', handleError);
    
    const playVideo = async () => {
      try {
        await videoElement.play();
        console.log("Video forzado a reproducir en montaje");
      } catch (error) {
        console.error("Error al forzar reproducciÃ³n inicial:", error);
      }
    };
    
    playVideo();
    
    return () => {
      videoElement.removeEventListener('play', handlePlay);
      videoElement.removeEventListener('pause', handlePause);
      videoElement.removeEventListener('error', handleError);
    };
  }, [videoRef]);

  const handleControlClick = (e) => {
    e.preventDefault();
    e.stopPropagation();
    console.log("Video control button clicked directly");
    
    try {
      toggleVideo(e);
    } catch (error) {
      console.error("Error en handleControlClick:", error);
      
      if (videoRef.current) {
        if (isVideoPlaying) {
          videoRef.current.pause();
        } else {
          videoRef.current.play().catch(err => 
            console.error("Error reproduciendo video directamente:", err)
          );
        }
      }
    }
    
    return false;
  };

  return (
    <>
      {/* Video container */}
      <div className="fixed inset-0 w-full h-full z-0 overflow-hidden">
        <div className="absolute inset-0 flex items-center justify-center w-full h-full">
          <video
            ref={videoRef}
            autoPlay
            loop
            muted
            playsInline
            className="absolute w-full h-full object-cover"
          >
            <source src={BackgroundVideo} type="video/webm" />
            Tu navegador no soporta videos HTML5.
          </video>
        </div>
        
        {/* Overlay para mejorar contraste */}
        <div className="absolute inset-0 bg-gradient-to-b from-purple-950/70 via-purple-900/60 to-indigo-950/70 backdrop-blur-[2px]"></div>
      </div>
      
      {/* BotÃ³n de control */}
      <div className="fixed bottom-6 right-6 z-[9999]" style={{ pointerEvents: 'auto' }}>
        <motion.button
          onClick={handleControlClick}
          whileHover={{ 
            scale: 1.15,
            boxShadow: "0 0 25px rgba(250, 204, 21, 0.6)"
          }}
          whileTap={{ scale: 0.95 }}
          initial={{ opacity: 0, y: 20 }}
          animate={{ 
            opacity: 1, 
            y: 0,
            transition: { type: "spring", stiffness: 400, damping: 10 }
          }}
          className="w-12 h-12 md:w-16 md:h-16 rounded-full bg-yellow-400 text-purple-900 flex items-center justify-center
                    shadow-lg shadow-purple-900/50 border-2 border-yellow-300
                    hover:bg-yellow-300 active:bg-yellow-500
                    focus:outline-none focus:ring-4 focus:ring-yellow-300/50"
          aria-label={isVideoPlaying ? "Pausar video de fondo" : "Reproducir video de fondo"}
          style={{ 
            cursor: 'pointer', 
            WebkitTapHighlightColor: 'transparent',
            touchAction: 'manipulation'
          }}
        >
          {isVideoPlaying ? (
            <FiPause className="text-xl md:text-3xl" />
          ) : (
            <FiPlay className="text-xl md:text-3xl" />
          )}
          
          {/* Efecto de pulso */}
          <motion.div
            className="absolute -inset-2 md:-inset-3 rounded-full bg-yellow-400/20 z-[-1]"
            animate={{ 
              scale: [1, 1.2, 1],
              opacity: [0.3, 0.6, 0.3]
            }}
            transition={{ 
              repeat: Infinity,
              duration: 2,
              ease: "easeInOut"
            }}
          />
        </motion.button>
      </div>
    </>
  );
};

export default BackgroundVideoComponent;\n\n

=== ./public/components/decorative/ParticlesBackground.jsx ===
import React from 'react'
import { motion } from 'framer-motion'

/**
 * Componente que genera un fondo de partÃ­culas animadas
 * para efectos decorativos en la pÃ¡gina de inicio
 */
const ParticlesBackground = () => {
  const particles = Array.from({ length: 30 }, (_, i) => ({
    id: i,
    size: Math.random() * 8 + 2,
    x: Math.random() * 100,
    y: Math.random() * 100,
    duration: Math.random() * 20 + 10,
    delay: Math.random() * 10
  }));

  return (
    <div className="fixed inset-0 z-0 pointer-events-none overflow-hidden">
      {particles.map((particle) => (
        <motion.div
          key={particle.id}
          className="absolute rounded-full bg-white/10"
          style={{
            width: particle.size,
            height: particle.size,
            left: `${particle.x}%`,
            top: `${particle.y}%`,
          }}
          animate={{
            y: [0, -100, 0],
            opacity: [0, 0.4, 0],
            scale: [0, 1, 0.5]
          }}
          transition={{
            duration: particle.duration,
            repeat: Infinity,
            delay: particle.delay,
            ease: "easeInOut"
          }}
        />
      ))}
    </div>
  );
};

export default ParticlesBackground;\n\n

=== ./public/components/index.js ===
// Exportar todos los componentes de public/components
// Exporta las secciones
export * from './sections';
// Exporta los componentes decorativos
export * from './decorative';
// Exporta los componentes UI
export * from './ui';\n\n

=== ./public/components/sections/ContactSection.jsx ===
import React from 'react'
import { FiPhoneCall, FiMail, FiMapPin, FiClock } from 'react-icons/fi'

/**
 * Componente que muestra la informaciÃ³n de contacto
 * con estilo mejorado y elementos interactivos
 */
const ContactInfo = () => {
  return (
    <div className="space-y-4">
      {/* TelÃ©fono */}
      <div className="flex items-center gap-3 group">
        <div className="p-3 bg-indigo-900/50 rounded-lg group-hover:bg-indigo-800/60 transition-colors duration-300">
          <FiPhoneCall className="text-xl text-yellow-400" />
        </div>
        <div>
          <h4 className="text-sm text-gray-300">TelÃ©fono</h4>
          <a 
            href="tel:+523332300243" 
            className="text-white hover:text-yellow-300 transition-colors duration-300"
          >
            +52 (33) 3230 0243
          </a>
        </div>
      </div>
      
      {/* Email */}
      <div className="flex items-center gap-3 group">
        <div className="p-3 bg-indigo-900/50 rounded-lg group-hover:bg-indigo-800/60 transition-colors duration-300">
          <FiMail className="text-xl text-green-400" />
        </div>
        <div>
          <h4 className="text-sm text-gray-300">Email</h4>
          <a 
            href="mailto:contacto@tramboory.com" 
            className="text-white hover:text-green-300 transition-colors duration-300"
          >
            contacto@tramboory.com
          </a>
        </div>
      </div>
      
      {/* DirecciÃ³n */}
      <div className="flex items-center gap-3 group">
        <div className="p-3 bg-indigo-900/50 rounded-lg group-hover:bg-indigo-800/60 transition-colors duration-300">
          <FiMapPin className="text-xl text-blue-400" />
        </div>
        <div>
          <h4 className="text-sm text-gray-300">DirecciÃ³n</h4>
          <a 
            href="https://maps.google.com/?q=Tramboory,Zapopan,Jalisco" 
            target="_blank"
            rel="noopener noreferrer"
            className="text-white hover:text-blue-300 transition-colors duration-300"
          >
            Zapopan, Jalisco
          </a>
        </div>
      </div>
      
      {/* Horario */}
      <div className="flex items-center gap-3 group">
        <div className="p-3 bg-indigo-900/50 rounded-lg group-hover:bg-indigo-800/60 transition-colors duration-300">
          <FiClock className="text-xl text-purple-400" />
        </div>
        <div>
          <h4 className="text-sm text-gray-300">Horario</h4>
          <p className="text-white">Lun - Dom: 10:00 - 20:00</p>
        </div>
      </div>
    </div>
  );
};

export default ContactInfo;\n\n

=== ./public/components/sections/FeaturesSection.jsx ===
import React, { useRef } from 'react'
import { motion, useScroll, useTransform } from 'framer-motion'
import { 
  FiCheckCircle, 
  FiGift, 
  FiHeart, 
  FiStar, 
  FiUsers, 
  FiMusic,
  FiAward
} from 'react-icons/fi'
import FeatureCard from '../ui/FeatureCard'

/**
 * SecciÃ³n mejorada que muestra las caracterÃ­sticas destacadas
 * con efectos visuales sofisticados y animaciones avanzadas
 */
const FeaturesSection = () => {
  // Referencias para efectos de scroll
  const sectionRef = useRef(null);
  const { scrollYProgress } = useScroll({
    target: sectionRef,
    offset: ["start end", "end start"]
  });
  
  // Efectos de parallax basados en scroll
  const opacity = useTransform(scrollYProgress, [0, 0.2, 0.8, 1], [0.8, 1, 1, 0.8]);
  const scale = useTransform(scrollYProgress, [0, 0.5, 1], [0.98, 1, 0.98]);
  
  // Variantes para animaciones secuenciales
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.2
      }
    }
  };
  
  // CaracterÃ­sticas destacadas
  const features = [
    {
      icon: FiCheckCircle,
      title: 'DiversiÃ³n Garantizada',
      description: 'Cada momento estÃ¡ lleno de risas y alegrÃ­a',
      color: 'green'
    },
    {
      icon: FiGift,
      title: 'Paquetes Flexibles',
      description: 'Adaptados a tus necesidades y presupuesto',
      color: 'yellow'
    },
    {
      icon: FiHeart,
      title: 'AtenciÃ³n Personalizada',
      description: 'Cuidamos cada detalle de tu evento',
      color: 'pink'
    },
    {
      icon: FiStar,
      title: 'Experiencia Premium',
      description: 'Instalaciones y servicio de primera',
      color: 'blue'
    },
    {
      icon: FiUsers,
      title: 'Personal Profesional',
      description: 'Equipo experto y dedicado',
      color: 'purple'
    },
    {
      icon: FiMusic,
      title: 'Ambiente Festivo',
      description: 'MÃºsica y animaciÃ³n garantizada',
      color: 'red'
    }
  ];

  return (
    <motion.section
      ref={sectionRef}
      id="features"
      style={{ opacity, scale }}
      className="relative py-28 bg-gradient-to-b from-purple-900/90 via-indigo-950/90 to-purple-900/90 
        scroll-mt-20 overflow-hidden"
    >
      {/* Elementos decorativos mejorados */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        {/* Gradientes de fondo */}
        <div className="absolute top-0 left-0 w-full h-32 bg-gradient-to-b from-purple-950/90 to-transparent backdrop-blur-sm"></div>
        <div className="absolute -top-20 -left-20 w-[28rem] h-[28rem] bg-gradient-to-r from-indigo-500/10 to-transparent rounded-full blur-[60px]"></div>
        <div className="absolute -bottom-40 -right-40 w-[30rem] h-[30rem] bg-gradient-to-t from-indigo-500/10 to-transparent rounded-full blur-[70px]"></div>
        
        {/* CÃ­rculos decorativos animados */}
        <motion.div 
          animate={{ 
            rotate: [0, 180],
            scale: [1, 1.05, 1],
            opacity: [0.05, 0.08, 0.05] 
          }}
          transition={{ 
            duration: 20, 
            repeat: Infinity,
            ease: "linear" 
          }}
          className="absolute top-1/3 left-1/4 w-[36rem] h-[36rem] border border-blue-500/5 rounded-full"
        ></motion.div>
        
        <motion.div 
          animate={{ 
            rotate: [180, 0],
            scale: [1, 1.03, 1],
            opacity: [0.03, 0.06, 0.03] 
          }}
          transition={{ 
            duration: 25, 
            repeat: Infinity,
            ease: "linear" 
          }}
          className="absolute bottom-1/4 right-1/3 w-[32rem] h-[32rem] border border-purple-500/5 rounded-full"
        ></motion.div>
        
        {/* Elementos decorativos aleatorios */}
        {[...Array(12)].map((_, index) => (
          <motion.div 
            key={`particle-${index}`}
            initial={{ opacity: 0.1 }}
            animate={{ 
              opacity: [0.1, 0.3, 0.1],
              scale: [1, 1.2, 1]
            }}
            transition={{ 
              duration: 2 + index % 3,
              repeat: Infinity,
              delay: index * 0.3,
              ease: "easeInOut"
            }}
            className="absolute rounded-full"
            style={{ 
              width: `${Math.random() * 3 + 1}px`,
              height: `${Math.random() * 3 + 1}px`,
              top: `${5 + Math.random() * 90}%`, 
              left: `${5 + Math.random() * 90}%`,
              backgroundColor: index % 3 === 0 ? 'rgba(147, 197, 253, 0.3)' : // blue
                             index % 3 === 1 ? 'rgba(196, 181, 253, 0.3)' : // purple
                             'rgba(252, 211, 77, 0.3)', // yellow
              filter: "blur(1px)"
            }}
          />
        ))}
      </div>
      
      <div className="container mx-auto px-6 relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true, margin: "-100px" }}
          transition={{ duration: 0.8 }}
          className="text-center mb-20"
        >
          {/* Badge mejorado - Ahora posicionado correctamente */}
          <div className="flex justify-center mb-3">
            <div className="inline-flex items-center gap-2 bg-gradient-to-r from-blue-500/10 via-purple-500/10 to-blue-500/10 
              backdrop-blur-sm px-5 py-2 rounded-full border border-blue-500/30">
              <FiAward className="text-blue-300" />
              <span className="text-[0.96em] font-medium text-blue-300 uppercase tracking-wider">
                Por QuÃ© Elegirnos
              </span>
            </div>
          </div>
          
          {/* TÃ­tulo mejorado */}
          <h2 className="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6 font-funhouse relative inline-block">
            La Experiencia Tramboory
            <motion.span 
              className="absolute -bottom-2 left-0 w-full h-1 bg-gradient-to-r from-blue-300/0 via-blue-300/70 to-blue-300/0"
              animate={{ 
                scaleX: [0, 1, 1, 0],
                x: ["-100%", "0%", "0%", "100%"]
              }}
              transition={{ 
                duration: 4, 
                repeat: Infinity,
                ease: "easeInOut" 
              }}
            />
          </h2>
          
          {/* DescripciÃ³n mejorada */}
          <motion.p 
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: 0.3, duration: 0.8 }}
            className="text-xl text-gray-200 max-w-2xl mx-auto leading-relaxed"
          >
            Descubre por quÃ© somos la mejor opciÃ³n para tu celebraciÃ³n
            <FiStar className="inline ml-2 text-sm text-blue-300" />
          </motion.p>
        </motion.div>

        {/* Grid con efecto de brillo */}
        <div className="relative">
          {/* Efectos de iluminaciÃ³n */}
          <div className="absolute -inset-10 bg-gradient-to-tr from-blue-500/5 via-purple-500/0 to-purple-500/5 rounded-3xl blur-3xl -z-10"></div>
          
          {/* Grid de tarjetas */}
          <motion.div
            variants={containerVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true, margin: "-50px" }}
            className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto"
          >
          {features.map((feature, index) => (
            <FeatureCard key={index} feature={feature} index={index} />
          ))}
          </motion.div>
        </div>
      </div>
    </motion.section>
  );
};

export default FeaturesSection;\n\n

=== ./public/components/sections/FooterSection.jsx ===
import React, { useRef } from 'react'
import { Link } from 'react-router-dom'
import { motion, useScroll, useTransform } from 'framer-motion'
import { FiHeart, FiStar } from 'react-icons/fi'
import Logo from '@shared/assets/img/logo.webp'

/**
 * SecciÃ³n de pie de pÃ¡gina mejorada con efectos visuales sofisticados,
 * logo, derechos reservados y enlaces
 */
const FooterSection = () => {
  const currentYear = new Date().getFullYear();
  
  // Referencias para efectos de scroll
  const footerRef = useRef(null);
  const { scrollYProgress } = useScroll({
    target: footerRef,
    offset: ["start end", "end end"]
  });
  
  // Efectos de parallax basados en scroll
  const opacity = useTransform(scrollYProgress, [0, 0.7], [0.7, 1]);
  
  // Enlaces para el footer
  const footerLinks = [
    { to: "/appointments", label: "Reservaciones" },
    { to: "/about", label: "Acerca de" },
    { to: "/appointments", label: "Paquetes" }
  ];
  
  return (
    <motion.footer 
      ref={footerRef}
      style={{ opacity }}
      className="relative py-16 bg-gradient-to-b from-indigo-950/90 to-black/95 overflow-hidden"
    >
      {/* Borde superior decorativo */}
      <div className="absolute top-0 left-0 right-0 h-[1px] bg-gradient-to-r from-transparent via-indigo-500/30 to-transparent"></div>
      
      {/* Elementos decorativos */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        {/* Gradientes decorativos */}
        <div className="absolute -top-20 -left-20 w-60 h-60 bg-gradient-to-r from-indigo-500/5 to-transparent rounded-full blur-3xl"></div>
        <div className="absolute -bottom-40 -right-40 w-80 h-80 bg-gradient-to-t from-purple-500/5 to-transparent rounded-full blur-3xl"></div>
        
        {/* PequeÃ±as partÃ­culas decorativas */}
        {[...Array(8)].map((_, index) => (
          <motion.div 
            key={`particle-${index}`}
            initial={{ opacity: 0.1 }}
            animate={{ 
              opacity: [0.1, 0.3, 0.1],
              y: [0, -10, 0]
            }}
            transition={{ 
              duration: 3 + index % 5,
              repeat: Infinity,
              delay: index * 0.5,
              ease: "easeInOut"
            }}
            className="absolute rounded-full"
            style={{ 
              width: `${Math.random() * 2 + 1}px`,
              height: `${Math.random() * 2 + 1}px`,
              bottom: `${20 + Math.random() * 60}%`, 
              left: `${10 + Math.random() * 80}%`,
              backgroundColor: 'rgba(165, 180, 252, 0.3)', // indigo
              filter: "blur(1px)"
            }}
          />
        ))}
        
        {/* PequeÃ±as estrellas decorativas */}
        {[...Array(2)].map((_, index) => (
          <motion.div
            key={`star-${index}`}
            initial={{ opacity: 0 }}
            animate={{ 
              opacity: [0.1, 0.2, 0.1],
              rotate: [0, 10, -10, 0]
            }}
            transition={{ 
              duration: 4,
              repeat: Infinity,
              delay: index * 2
            }}
            className="absolute text-indigo-300/10"
            style={{
              fontSize: `${12 + index * 2}px`,
              bottom: `${20 + index * 30}%`,
              left: `${20 + index * 60}%`,
            }}
          >
            <FiStar />
          </motion.div>
        ))}
      </div>
      
      <div className="container mx-auto px-6 relative z-10">
        <div className="flex flex-col md:flex-row justify-between items-center">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
            className="mb-10 md:mb-0 relative"
          >
            {/* Efecto de brillo sutil al logo */}
            <div className="absolute -inset-3 bg-gradient-to-r from-indigo-500/10 to-transparent rounded-full blur-md opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            
            <Link to="/" className="flex items-center space-x-4 group relative">
              <div className="relative overflow-hidden rounded-full p-1">
                <div className="absolute inset-0 bg-gradient-to-r from-indigo-500/20 via-purple-500/20 to-indigo-500/20 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                <motion.div
                  whileHover={{ scale: 1.05, rotate: 5 }}
                  transition={{ type: "spring", stiffness: 300 }}
                >
                  <img src={Logo} alt="Tramboory" className="h-16 w-auto relative z-10" />
                </motion.div>
              </div>
              
              <div className="text-left hidden sm:block">
                <motion.p 
                  className="text-white font-bold text-xl font-funhouse"
                  whileHover={{ scale: 1.05 }}
                  transition={{ type: "spring", stiffness: 300 }}
                >
                  Tramboory
                </motion.p>
                <p className="text-indigo-300/90 text-sm">
                  Momentos inolvidables 
                  <FiHeart className="inline-block ml-1 text-xs text-pink-400/70" />
                </p>
              </div>
            </Link>
          </motion.div>
          
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6, delay: 0.2 }}
            className="text-center md:text-right"
          >
            <p className="text-indigo-200/80 text-sm">
              Â© {currentYear} Tramboory. Todos los derechos
              reservados.
            </p>
            
            <div className="mt-4 flex justify-center md:justify-end space-x-6">
              {footerLinks.map((link, index) => (
                <motion.div
                  key={index}
                  whileHover={{ y: -3 }}
                  transition={{ type: "spring", stiffness: 300 }}
                >
                  <Link 
                    to={link.to} 
                    className="relative px-2 py-1 text-indigo-300/90 hover:text-white transition-colors duration-300 group"
                  >
                    {/* LÃ­nea decorativa que aparece en hover */}
                    <span className="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-indigo-400/0 via-indigo-400/70 to-indigo-400/0 group-hover:w-full transition-all duration-300"></span>
                    {link.label}
                  </Link>
                </motion.div>
              ))}
            </div>
          </motion.div>
        </div>
      </div>
    </motion.footer>
  );
};

export default FooterSection;\n\n

=== ./public/components/sections/GallerySection.jsx ===
import React, { useRef } from 'react'
import { motion, useScroll, useTransform } from 'framer-motion'
import { FiInstagram, FiImage, FiHeart, FiCamera } from 'react-icons/fi'
import CloudinaryCarousel from '@shared/components/cloudinary/CloudinaryCarousel'

/**
 * SecciÃ³n de galerÃ­a mejorada que muestra imÃ¡genes del carousel
 * con efectos visuales sofisticados y estÃ©tica refinada
 */
const GallerySection = ({ carouselImages }) => {
  // Referencias para efectos de scroll
  const sectionRef = useRef(null);
  const { scrollYProgress } = useScroll({
    target: sectionRef,
    offset: ["start end", "end start"]
  });
  
  // Efectos de parallax basados en scroll
  const opacity = useTransform(scrollYProgress, [0, 0.2, 0.8, 1], [0.8, 1, 1, 0.8]);
  const scale = useTransform(scrollYProgress, [0, 0.5, 1], [0.98, 1, 0.98]);
  const yParallax = useTransform(scrollYProgress, [0, 1], [0, -30]);
  
  return (
    <motion.section
      ref={sectionRef}
      id="gallery"
      style={{ opacity, scale }}
      className="relative py-28 bg-gradient-to-b from-purple-900/90 via-indigo-950/90 to-purple-900/90 
        scroll-mt-20 overflow-hidden"
    >
      {/* Elementos decorativos mejorados */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        {/* Gradientes de fondo mejorados */}
        <div className="absolute top-0 left-0 w-full h-32 bg-gradient-to-b from-purple-950/90 to-transparent backdrop-blur-sm"></div>
        <div className="absolute bottom-0 left-0 w-full h-32 bg-gradient-to-t from-purple-950/90 to-transparent backdrop-blur-sm"></div>
        
        {/* CÃ­rculos y formas decorativas */}
        <div className="absolute -top-20 -right-20 w-[28rem] h-[28rem] bg-gradient-to-b from-pink-500/10 to-transparent rounded-full blur-[60px]"></div>
        <div className="absolute -bottom-40 -left-40 w-[30rem] h-[30rem] bg-gradient-to-t from-purple-500/10 to-transparent rounded-full blur-[70px]"></div>
        
        {/* Elementos circulares animados */}
        <motion.div 
          animate={{ 
            rotate: [0, 360],
            opacity: [0.03, 0.06, 0.03] 
          }}
          transition={{ 
            duration: 40, 
            repeat: Infinity,
            ease: "linear" 
          }}
          className="absolute top-1/3 right-1/4 w-[35rem] h-[35rem] border border-pink-500/5 rounded-full"
        ></motion.div>
        
        {/* PequeÃ±as partÃ­culas flotantes */}
        {[...Array(15)].map((_, index) => (
          <motion.div 
            key={`floating-${index}`}
            initial={{ opacity: 0.1 }}
            animate={{ 
              y: [0, -10, 0],
              opacity: [0.1, 0.3, 0.1],
              scale: [1, 1.2, 1]
            }}
            transition={{ 
              duration: 3 + index % 5,
              repeat: Infinity,
              delay: index * 0.4,
              ease: "easeInOut"
            }}
            className="absolute rounded-full"
            style={{ 
              width: `${Math.random() * 3 + 1}px`,
              height: `${Math.random() * 3 + 1}px`,
              top: `${5 + Math.random() * 90}%`, 
              left: `${5 + Math.random() * 90}%`,
              backgroundColor: index % 3 === 0 ? 'rgba(244, 114, 182, 0.3)' : // pink
                               index % 3 === 1 ? 'rgba(196, 181, 253, 0.3)' : // purple
                               'rgba(255, 255, 255, 0.3)', // white
              filter: "blur(1px)"
            }}
          />
        ))}
        
        {/* PequeÃ±os iconos decorativos */}
        {[FiCamera, FiHeart].map((Icon, index) => (
          <motion.div
            key={`icon-${index}`}
            initial={{ opacity: 0 }}
            animate={{ 
              opacity: [0.1, 0.2, 0.1],
              rotate: [0, 10, -10, 0]
            }}
            transition={{ 
              duration: 4,
              repeat: Infinity,
              delay: index * 2
            }}
            className="absolute text-pink-300/20"
            style={{
              fontSize: `${index === 0 ? 30 : 24}px`,
              top: `${index === 0 ? 15 : 70}%`,
              left: `${index === 0 ? 80 : 15}%`,
            }}
          >
            <Icon />
          </motion.div>
        ))}
      </div>
      
      <div className="container mx-auto px-6 relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true, margin: "-100px" }}
          transition={{ duration: 0.8 }}
          className="text-center mb-20"
        >
          {/* Badge mejorado - Ahora posicionado correctamente */}
          <div className="flex justify-center mb-3">
            <div className="inline-flex items-center gap-2 bg-gradient-to-r from-pink-500/10 via-purple-500/10 to-pink-500/10 
              backdrop-blur-sm px-5 py-2 rounded-full border border-pink-500/30">
              <FiImage className="text-pink-300" />
              <span className="text-[0.96em] font-medium text-pink-300 uppercase tracking-wider">
                Momentos Especiales
              </span>
            </div>
          </div>
          
          {/* TÃ­tulo mejorado */}
          <h2 className="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6 font-funhouse relative inline-block">
            Nuestra GalerÃ­a
            <motion.span 
              className="absolute -bottom-2 left-0 w-full h-1 bg-gradient-to-r from-pink-300/0 via-pink-300/70 to-pink-300/0"
              animate={{ 
                scaleX: [0, 1, 1, 0],
                x: ["-100%", "0%", "0%", "100%"]
              }}
              transition={{ 
                duration: 4, 
                repeat: Infinity,
                ease: "easeInOut" 
              }}
            />
          </h2>
          
          {/* DescripciÃ³n mejorada */}
          <motion.p 
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: 0.3, duration: 0.8 }}
            className="text-xl text-gray-200 max-w-2xl mx-auto leading-relaxed"
          >
            Momentos inolvidables capturados en Tramboory. Â¡Descubre la diversiÃ³n que te espera!
          </motion.p>
        </motion.div>

        {/* Carrusel mejorado con efectos visuales */}
        <motion.div
          style={{ y: yParallax }}
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.2 }}
          viewport={{ once: true }}
          className="relative mb-16"
        >
          {/* Marco decorativo alrededor del carrusel */}
          <div className="absolute -inset-1.5 bg-gradient-to-tr from-pink-500/10 via-purple-500/5 to-pink-500/10 rounded-2xl blur-sm"></div>
          <div className="absolute -inset-0.5 bg-gradient-to-tr from-pink-500/20 via-transparent to-pink-500/20 rounded-2xl"></div>
          
          {/* Decoraciones en las esquinas */}
          <div className="absolute -top-1.5 -left-1.5 w-8 h-8 border-t-2 border-l-2 border-pink-400/30 rounded-tl-lg z-20"></div>
          <div className="absolute -top-1.5 -right-1.5 w-8 h-8 border-t-2 border-r-2 border-pink-400/30 rounded-tr-lg z-20"></div>
          <div className="absolute -bottom-1.5 -left-1.5 w-8 h-8 border-b-2 border-l-2 border-pink-400/30 rounded-bl-lg z-20"></div>
          <div className="absolute -bottom-1.5 -right-1.5 w-8 h-8 border-b-2 border-r-2 border-pink-400/30 rounded-br-lg z-20"></div>
          
          <div className="rounded-2xl overflow-hidden shadow-2xl shadow-purple-900/20 border border-pink-500/20 backdrop-blur-sm relative">
            {/* Capa de overlay para efecto de hover */}
            <div className="absolute inset-0 bg-gradient-to-b from-pink-600/5 via-transparent to-pink-600/5 z-10 opacity-0 
              group-hover:opacity-100 transition-opacity duration-500"></div>
            
            {/* Carrusel con imÃ¡genes */}
            <CloudinaryCarousel 
              height="520px"
              autoPlaySpeed={2500}
              imageWidth={1.6}
              images={carouselImages}
            />
          </div>
        </motion.div>

        {/* BotÃ³n de Instagram mejorado */}
        <div className="flex justify-center">
          <motion.div
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            className="relative group"
          >
            {/* Efecto de brillo en hover */}
            <span className="absolute -inset-1 bg-gradient-to-r from-pink-500/30 to-purple-500/30 rounded-xl blur-md 
              opacity-0 group-hover:opacity-100 transition-opacity duration-300"></span>
            
            <motion.a
              href="https://www.instagram.com/tramboory/"
              target="_blank"
              rel="noopener noreferrer"
              className="relative flex items-center px-8 py-4 bg-gradient-to-r from-pink-500/20 to-purple-500/20 
                text-white rounded-xl font-bold text-lg border border-pink-500/30 
                group-hover:border-pink-400/50 backdrop-blur-md
                transition-all duration-300 shadow-lg"
            >
              <FiInstagram className="mr-3 text-pink-400 text-xl group-hover:text-pink-300 transition-colors duration-300" />
              <span className="group-hover:text-pink-200 transition-colors duration-300">Ver mÃ¡s en Instagram</span>
            </motion.a>
          </motion.div>
        </div>
      </div>
    </motion.section>
  );
};

export default GallerySection;\n\n

=== ./public/components/sections/HeroSection.jsx ===
ï»¿
import React, { useEffect, useRef } from 'react'
import { Link } from 'react-router-dom'
import { motion, useAnimation, useScroll, useTransform } from 'framer-motion'
import { FiCalendar, FiGift, FiStar } from 'react-icons/fi'
import ScrollIndicator from '@shared/components/ScrollIndicator'

/**
 * SecciÃƒÂ³n hero principal con mensaje de bienvenida, tÃƒÂ­tulo y CTA
 * Mejorada con efectos visuales avanzados
 */
const HeroSection = ({ sectionRefs }) => {
  const controls = useAnimation();
  const { scrollY } = useScroll();
  const decorRef = useRef(null);
  
  // Efecto parallax avanzado basado en scroll
  const yParallax = useTransform(scrollY, [0, 500], [0, -80]);
  const opacityParallax = useTransform(scrollY, [0, 300], [1, 0]);
  
  useEffect(() => {
    // Animar la apariciÃƒÂ³n secuencial de los elementos decorativos
    controls.start((i) => ({
      opacity: 1,
      scale: 1,
      transition: { delay: 0.3 * i, duration: 1.2, ease: "easeOut" }
    }));
  }, [controls]);

  return (
    <section
      ref={sectionRefs.hero}
      className="relative min-h-screen flex items-center justify-center overflow-hidden"
    >
      {/* Elementos decorativos mejorados del hero */}
      <div ref={decorRef} className="absolute inset-0 overflow-hidden pointer-events-none">
        {/* Gradientes circulares con animaciÃƒÂ³n */}
        <motion.div 
          initial={{ opacity: 0, scale: 0.8 }}
          animate={controls}
          custom={0}
          className="absolute -top-40 -right-40 w-[24rem] h-[24rem] bg-gradient-to-b from-purple-500/10 to-transparent rounded-full blur-[50px]"
        />
        <motion.div
          initial={{ opacity: 0, scale: 0.8 }}
          animate={controls}
          custom={1}
          className="absolute top-1/3 left-10 w-32 h-32 bg-gradient-to-r from-yellow-400/10 to-transparent rounded-full blur-[30px]"
        />
        <motion.div
          initial={{ opacity: 0, scale: 0.8 }}
          animate={controls}
          custom={2}
          className="absolute bottom-20 right-20 w-60 h-60 bg-gradient-to-t from-indigo-500/10 to-transparent rounded-full blur-[40px]"
        />
      </div>
      
      {/* Contenido principal con parallax efect */}
      <motion.div
        ref={sectionRefs.content}
        style={{ y: yParallax, opacity: opacityParallax }}
        initial={{ opacity: 0, y: 30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 1 }}
        className="container mx-auto px-6 pt-24 pb-32 text-center hero-content relative z-10"
      >
        <div className="max-w-5xl mx-auto">
          {/* Badge mejorado */}
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            className="mb-8 inline-block"
          >
            <span className="group relative px-5 py-2 rounded-full text-sm font-medium 
              bg-gradient-to-r from-purple-500/20 via-indigo-500/20 to-purple-500/20 
              text-yellow-300 border border-purple-500/30 backdrop-blur-sm 
              hover:border-yellow-400/50 transition-all duration-300 inline-flex items-center gap-2">
              <FiStar className="text-yellow-300 animate-pulse" />
              <span>El mejor salÃƒÂ³n de fiestas infantiles en Zapopan</span>
              <motion.span 
                className="absolute inset-0 -z-10 bg-gradient-to-r from-yellow-400/0 via-yellow-400/10 to-yellow-400/0 rounded-full"
                animate={{ 
                  backgroundPosition: ['0% 50%', '100% 50%', '0% 50%']
                }}
                transition={{ 
                  duration: 5, 
                  repeat: Infinity,
                  ease: "linear" 
                }}
              />
            </span>
          </motion.div>
          
          {/* TÃƒÂ­tulo principal mejorado */}
          <motion.h1 
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1, delay: 0.3 }}
            className="text-6xl md:text-8xl lg:text-9xl font-bold text-white mb-8 font-funhouse leading-tight"
          >
            <span className="block relative">
              Celebra con{' '}
              <span className="relative inline-block">
                <span className="relative z-10 text-gradient bg-clip-text text-transparent
                  bg-gradient-to-r from-yellow-300 via-yellow-400 to-yellow-300 
                  transform hover:scale-105 transition-transform duration-500">
                  Tramboory
                </span>
                <motion.span 
                  className="absolute -inset-1 -z-10 bg-gradient-to-r from-yellow-400/0 via-yellow-400/20 to-yellow-400/0 rounded-2xl blur-xl"
                  animate={{ 
                    backgroundPosition: ['0% 50%', '100% 50%', '0% 50%']
                  }}
                  transition={{ 
                    duration: 8, 
                    repeat: Infinity,
                    ease: "linear" 
                  }}
                />
              </span>
            </span>
          </motion.h1>
          
          {/* SubtÃƒÂ­tulo mejorado */}
          <motion.p 
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1, delay: 0.5 }}
            className="text-lg md:text-xl text-gray-200 mb-14 max-w-3xl mx-auto leading-relaxed"
          >
            Tu salÃƒÂ³n de eventos infantiles en Zapopan con experiencias diseÃƒÂ±adas
            para crear recuerdos inolvidables en el cumpleaÃƒÂ±os de tus pequeÃƒÂ±os.
          </motion.p>
          
          {/* Botones CTA mejorados */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1, delay: 0.7 }}
            className="flex justify-center w-full"
          >
            <motion.div
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="relative group"
            >
              <span className="absolute -inset-1 bg-gradient-to-r from-yellow-400/80 to-yellow-500/80 rounded-xl blur-md opacity-0 group-hover:opacity-100 transition-opacity duration-300"></span>
              <Link
                to="/appointments"
                className="relative px-10 py-5 bg-gradient-to-r from-yellow-400 to-yellow-500
                  text-purple-900 rounded-xl font-extrabold text-xl shadow-2xl
                  hover:shadow-yellow-400/40 hover:from-yellow-500 hover:to-yellow-600
                  transition-all duration-300 flex items-center group-hover:text-purple-950"
              >
                <FiCalendar className="mr-2" />
                <span>Reserva tu fiesta</span>
              </Link>
            </motion.div>
          </motion.div>
        </div>
      </motion.div>

      {/* Scroll Indicator mejorado */}
      <div className="absolute bottom-6 left-0 right-0 z-10 flex justify-center w-full">
        <ScrollIndicator targetId="services" />
      </div>
    </section>
  );
};

export default HeroSection;
\n\n

=== ./public/components/sections/PromotionsSection.jsx ===
import React, { useRef } from 'react'
import { Link } from 'react-router-dom'
import { motion, useScroll, useTransform } from 'framer-motion'
import { FiArrowRight, FiStar, FiGift } from 'react-icons/fi'
import CloudinaryCarousel from '@shared/components/cloudinary/CloudinaryCarousel'

/**
 * SecciÃ³n de promociones del mes que se muestra condicionalmente
 * con efectos visuales mejorados para un aspecto ultra estÃ©tico
 */
const PromotionsSection = ({ promocionesImages }) => {
  // Referencias para efectos de scroll
  const sectionRef = useRef(null);
  
  // Si no hay imÃ¡genes de promociones, no renderizar la secciÃ³n
  if (!promocionesImages || promocionesImages.length === 0) {
    return null;
  }
  
  // Configurar efectos de scroll
  const { scrollYProgress } = useScroll({
    target: sectionRef,
    offset: ["start end", "end start"]
  });
  
  // Transformar valores basados en el scroll
  const opacity = useTransform(scrollYProgress, [0, 0.2, 0.8, 1], [0, 1, 1, 0]);
  const scale = useTransform(scrollYProgress, [0, 0.2, 0.8, 1], [0.95, 1, 1, 0.95]);

  // Variantes para animaciones secuenciales
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.2
      }
    }
  };
  
  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: { duration: 0.8, ease: "easeOut" }
    }
  };

  return (
    <motion.section
      ref={sectionRef}
      id="promociones"
      style={{ opacity, scale }}
      className="relative py-24 bg-gradient-to-br from-purple-800/90 via-indigo-900/90 to-purple-900/90 
        scroll-mt-20 backdrop-blur-md overflow-hidden"
    >
      {/* Mejora de los efectos de transiciÃ³n entre secciones */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <div className="absolute top-0 left-0 w-full h-32 bg-gradient-to-b from-purple-950/90 to-transparent backdrop-blur-sm"></div>
        <div className="absolute bottom-0 left-0 w-full h-32 bg-gradient-to-t from-purple-950/90 to-transparent backdrop-blur-sm"></div>
        
        {/* Elementos decorativos adicionales */}
        <motion.div 
          animate={{ 
            rotate: [0, 360],
            opacity: [0.1, 0.2, 0.1] 
          }}
          transition={{ 
            duration: 15, 
            repeat: Infinity,
            ease: "linear" 
          }}
          className="absolute -top-40 -left-40 w-80 h-80 border border-yellow-400/10 rounded-full"
        />
        <motion.div 
          animate={{ 
            rotate: [0, -360],
            opacity: [0.05, 0.1, 0.05] 
          }}
          transition={{ 
            duration: 20, 
            repeat: Infinity,
            ease: "linear" 
          }}
          className="absolute -bottom-60 -right-60 w-[32rem] h-[32rem] border border-purple-400/10 rounded-full"
        />
        
        {/* Estrellas decorativas */}
        {[...Array(6)].map((_, index) => (
          <motion.div 
            key={index}
            initial={{ opacity: 0.2 }}
            animate={{ 
              opacity: [0.2, 0.8, 0.2],
              scale: [1, 1.2, 1]
            }}
            transition={{ 
              duration: 2 + index,
              repeat: Infinity,
              delay: index * 0.5,
              ease: "easeInOut"
            }}
            className="absolute bg-yellow-300/20 rounded-full w-1 h-1"
            style={{ 
              top: `${15 + index * 12}%`, 
              left: `${5 + index * 15}%`,
              filter: "blur(1px)"
            }}
          />
        ))}
      </div>
      
      <motion.div 
        className="container mx-auto px-6 relative z-10"
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, margin: "-100px" }}
        variants={containerVariants}
      >
        <motion.div
          variants={itemVariants}
          className="text-center mb-14"
        >
          <div className="flex justify-center mb-2">
            <div className="inline-flex items-center gap-2 bg-gradient-to-r from-yellow-500/10 via-pink-500/10 to-yellow-500/10 
              backdrop-blur-sm px-5 py-2 rounded-full border border-yellow-500/30">
              <FiGift className="text-yellow-300 animate-pulse" />
              <span className="text-[0.98em] font-medium text-yellow-300 uppercase tracking-wide">
                Ofertas Especiales
              </span>
            </div>
          </div>
          
          <h2 className="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-5 font-funhouse relative inline-block">
            Â¡Promociones del Mes!
            <motion.span 
              className="absolute -bottom-1 left-0 w-full h-1 bg-gradient-to-r from-yellow-300/0 via-yellow-300/70 to-yellow-300/0"
              animate={{ 
                scaleX: [0, 1, 1, 0],
                x: ["-100%", "0%", "0%", "100%"]
              }}
              transition={{ 
                duration: 4, 
                repeat: Infinity,
                ease: "easeInOut" 
              }}
            />
          </h2>
          
          <motion.p 
            className="text-xl text-yellow-200/90 max-w-2xl mx-auto"
            variants={itemVariants}
          >
            No te pierdas nuestras ofertas especiales por tiempo limitado
            <FiStar className="inline ml-2 text-sm text-yellow-300 animate-pulse" />
          </motion.p>
        </motion.div>

        <motion.div
          variants={itemVariants}
          className="mb-12 relative"
        >
          {/* Efecto decorativo en las esquinas del carrusel */}
          <div className="absolute -top-1 -left-1 w-12 h-12 border-t-2 border-l-2 border-yellow-400/30 rounded-tl-xl z-20"></div>
          <div className="absolute -top-1 -right-1 w-12 h-12 border-t-2 border-r-2 border-yellow-400/30 rounded-tr-xl z-20"></div>
          <div className="absolute -bottom-1 -left-1 w-12 h-12 border-b-2 border-l-2 border-yellow-400/30 rounded-bl-xl z-20"></div>
          <div className="absolute -bottom-1 -right-1 w-12 h-12 border-b-2 border-r-2 border-yellow-400/30 rounded-br-xl z-20"></div>
          
          {/* Carrusel con efectos mejorados */}
          <div className="rounded-2xl overflow-hidden shadow-[0_0_25px_rgba(147,51,234,0.3)] 
            backdrop-blur-lg border border-white/10 relative group">
            <div className="absolute inset-0 bg-gradient-to-b from-purple-600/10 via-transparent to-purple-600/10 z-10 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
            <CloudinaryCarousel 
              height="480px"
              autoPlaySpeed={3000}
              imageWidth={1.2}
              images={promocionesImages}
            />
          </div>
        </motion.div>

        <motion.div 
          variants={itemVariants}
          className="flex justify-center"
        >
          <motion.div
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            className="relative group"
          >
            {/* Efecto de brillo en hover */}
            <span className="absolute -inset-1 bg-gradient-to-r from-yellow-400/70 to-yellow-500/70 rounded-xl blur-md opacity-0 group-hover:opacity-100 transition-opacity duration-300"></span>
            <Link
              to="/reservations"
              className="relative px-8 py-4 bg-gradient-to-r from-yellow-400 to-yellow-500
                text-purple-900 rounded-xl font-bold text-lg shadow-xl
                hover:shadow-yellow-400/50 hover:from-yellow-500 hover:to-yellow-600 
                transition-all duration-300 group flex items-center"
            >
              <span>Â¡Reserva Ahora!</span>
              <FiArrowRight className="ml-2 group-hover:translate-x-2 transition-transform duration-300" />
            </Link>
          </motion.div>
        </motion.div>
      </motion.div>
    </motion.section>
  );
};

export default PromotionsSection;\n\n

=== ./public/components/sections/ReservationStepsSection.jsx ===
import React, { useRef } from 'react'
import { motion, useScroll, useTransform } from 'framer-motion'
import { FiCalendar, FiPackage, FiCheck, FiZap, FiArrowRight } from 'react-icons/fi'

/**
 * SecciÃ³n que muestra los pasos para realizar una reserva
 * con efectos visuales mejorados para una experiencia estÃ©tica elevada
 */
const ReservationStepsSection = () => {
  // Referencia para efectos de scroll
  const sectionRef = useRef(null);
  const { scrollYProgress } = useScroll({
    target: sectionRef,
    offset: ["start end", "end start"]
  });
  
  // Efectos de parallax basados en scroll
  const opacity = useTransform(scrollYProgress, [0, 0.2, 0.8, 1], [0.6, 1, 1, 0.6]);
  const scale = useTransform(scrollYProgress, [0, 0.5, 1], [0.98, 1, 0.98]);
  
  // Variantes para animaciones secuenciales
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.15,
        delayChildren: 0.3
      }
    }
  };
  
  const itemVariants = {
    hidden: { opacity: 0, y: 30 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: { duration: 0.7, ease: "easeOut" }
    }
  };
  
  const reservationSteps = [
    {
      icon: FiCalendar,
      title: "Elige tu fecha",
      description: "Selecciona el dÃ­a y la hora que mejor te funcionen para tu evento"
    },
    {
      icon: FiPackage,
      title: "Selecciona un paquete",
      description: "Escoge entre nuestras opciones diseÃ±adas para diferentes necesidades"
    },
    {
      icon: FiCheck,
      title: "Personaliza tu experiencia",
      description: "Agrega servicios adicionales para hacer tu evento Ãºnico"
    },
    {
      icon: FiZap,
      title: "Â¡Confirma y listo!",
      description: "Realiza tu pago y prepÃ¡rate para disfrutar de un evento increÃ­ble"
    }
  ];

  return (
    <motion.section 
      ref={sectionRef}
      style={{ opacity, scale }}
      className="relative py-28 bg-gradient-to-b from-purple-900/90 via-indigo-900/90 to-purple-900/90 overflow-hidden"
    >
      {/* Elementos decorativos */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <div className="absolute -top-40 -left-40 w-80 h-80 bg-gradient-to-b from-indigo-500/5 to-transparent rounded-full blur-3xl"></div>
        <div className="absolute -bottom-60 -right-60 w-[32rem] h-[32rem] bg-gradient-to-t from-purple-500/5 to-transparent rounded-full blur-3xl"></div>
        
        {/* LÃ­neas decorativas */}
        <motion.div 
          animate={{ 
            opacity: [0.05, 0.1, 0.05],
            rotate: [0, 180]
          }}
          transition={{ 
            duration: 15, 
            repeat: Infinity,
            ease: "linear" 
          }}
          className="absolute top-1/4 left-1/4 w-[40rem] h-[40rem] border border-indigo-500/5 rounded-full"
        ></motion.div>
        
        {/* Puntos decorativos */}
        {[...Array(8)].map((_, index) => (
          <motion.div 
            key={`dot-${index}`}
            initial={{ opacity: 0.2 }}
            animate={{ 
              opacity: [0.2, 0.5, 0.2],
              scale: [1, 1.1, 1]
            }}
            transition={{ 
              duration: 3 + index,
              repeat: Infinity,
              delay: index * 0.3,
              ease: "easeInOut"
            }}
            className="absolute bg-indigo-300/30 rounded-full w-1.5 h-1.5"
            style={{ 
              top: `${15 + index * 10}%`, 
              left: `${10 + index * 12}%`,
              filter: "blur(1px)"
            }}
          />
        ))}
      </div>
      
      <div className="container mx-auto px-6 relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true, margin: "-100px" }}
          transition={{ duration: 0.8 }}
          className="text-center mb-20"
        >
          <div className="flex justify-center mb-2">
            <div className="inline-flex items-center gap-2 bg-gradient-to-r from-indigo-500/10 via-indigo-600/10 to-indigo-500/10 
              backdrop-blur-sm px-5 py-2 rounded-full border border-indigo-500/30">
              <span className="text-[0.98em] font-medium text-indigo-300 uppercase tracking-wider">
                Proceso Simplificado
              </span>
            </div>
          </div>
          
          <h2 className="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6 font-funhouse relative inline-block">
            Â¿CÃ³mo Reservar?
            <motion.span 
              className="absolute -bottom-2 left-0 w-full h-1 bg-gradient-to-r from-indigo-300/0 via-indigo-300/70 to-indigo-300/0"
              animate={{ 
                scaleX: [0, 1, 1, 0],
                x: ["-100%", "0%", "0%", "100%"]
              }}
              transition={{ 
                duration: 4, 
                repeat: Infinity,
                ease: "easeInOut" 
              }}
            />
          </h2>
          
          <motion.p 
            className="text-xl text-indigo-200/90 max-w-2xl mx-auto leading-relaxed"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: 0.2, duration: 0.8 }}
          >
            Solo 4 pasos sencillos te separan de tu evento perfecto
          </motion.p>
        </motion.div>

        <motion.div 
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, margin: "-50px" }}
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 max-w-6xl mx-auto relative"
        >
          {/* LÃ­nea conectora principal para desktop */}
          <div className="hidden lg:block absolute top-[4.5rem] left-[4.5rem] right-[4.5rem] h-0.5 bg-gradient-to-r from-indigo-500/10 via-indigo-500/30 to-indigo-500/10"></div>
          
          {reservationSteps.map((step, index) => (
            <motion.div
              key={index}
              variants={itemVariants}
              className="relative z-10"
            >
              {/* Tarjeta con glassmorphism y efectos hover */}
              <motion.div 
                whileHover={{ y: -5, boxShadow: "0 15px 30px -10px rgba(79, 70, 229, 0.15)" }}
                className="flex flex-col items-center text-center p-6 rounded-2xl 
                  bg-gradient-to-br from-indigo-700/10 to-indigo-900/30
                  backdrop-blur-md border border-indigo-500/20 
                  transition-all duration-300 h-full group"
              >
                {/* Icono con efecto de brillo */}
                <div className="relative">
                  <div className="absolute -inset-3 bg-indigo-500/20 rounded-full blur-xl opacity-0 group-hover:opacity-70 transition-opacity duration-500"></div>
                  <div className="flex items-center justify-center w-16 h-16 rounded-full 
                    bg-gradient-to-br from-indigo-500/30 to-indigo-700/30 
                    border border-indigo-500/40 mb-5 relative z-10
                    group-hover:border-indigo-400/50 transition-all duration-300"
                  >
                    <step.icon className="text-2xl text-yellow-300 group-hover:text-yellow-200" />
                  </div>
                </div>
                
                {/* NÃºmero del paso con diseÃ±o mejorado */}
                <div className="absolute -top-3 -left-3 w-8 h-8 rounded-full
                  bg-gradient-to-br from-yellow-400/30 to-yellow-600/30 
                  backdrop-blur-md border border-yellow-400/30
                  flex items-center justify-center z-20"
                >
                  <span className="text-yellow-300 text-sm font-bold">{index + 1}</span>
                </div>
                
                {/* Flecha entre pasos (visible en mÃ³vil y tablet) */}
                {index < reservationSteps.length - 1 && (
                  <div className="absolute -right-4 top-1/2 transform -translate-y-1/2 lg:hidden z-10">
                    <FiArrowRight className="text-indigo-400/60" />
                  </div>
                )}
                
                {/* Contenido del paso */}
                <h3 className="text-xl font-bold text-white mb-3 group-hover:text-indigo-200 transition-colors">
                  {step.title}
                </h3>
                <p className="text-indigo-200/90 leading-relaxed">
                  {step.description}
                </p>
              </motion.div>
              
              {/* Punto decorativo en la lÃ­nea conectora (solo desktop) */}
              {index < reservationSteps.length && (
                <motion.div 
                  className="hidden lg:flex absolute top-[4.5rem] left-1/2 transform -translate-x-1/2 z-20
                    w-4 h-4 rounded-full bg-indigo-600/40 border border-indigo-400/60
                    items-center justify-center"
                  animate={{ 
                    scale: [1, 1.2, 1],
                    opacity: [0.7, 1, 0.7] 
                  }}
                  transition={{ 
                    duration: 2, 
                    repeat: Infinity,
                    delay: index * 0.3
                  }}
                >
                  <div className="w-1.5 h-1.5 rounded-full bg-yellow-300"></div>
                </motion.div>
              )}
            </motion.div>
          ))}
        </motion.div>
      </div>
    </motion.section>
  );
};

export default ReservationStepsSection;\n\n

=== ./public/components/sections/ServicesSection.jsx ===
import React, { useRef } from 'react'
import { motion, useScroll, useTransform } from 'framer-motion'
import { FiPackage, FiStar } from 'react-icons/fi'
import ServiceCard from '../ui/ServiceCard'

/**
 * SecciÃ³n mejorada que muestra los paquetes de servicios disponibles
 * con efectos visuales sofisticados y animaciones avanzadas
 */
const ServicesSection = ({ services }) => {
  // Referencias para efectos de scroll
  const sectionRef = useRef(null);
  const { scrollYProgress } = useScroll({
    target: sectionRef,
    offset: ["start end", "end start"]
  });
  
  // Efectos de parallax basados en scroll
  const opacity = useTransform(scrollYProgress, [0, 0.2, 0.8, 1], [0.7, 1, 1, 0.7]);
  const scale = useTransform(scrollYProgress, [0, 0.5, 1], [0.97, 1, 0.97]);
  
  // Variantes para animaciones secuenciales
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.15,
        delayChildren: 0.3
      }
    }
  };
  
  return (
    <motion.section
      ref={sectionRef}
      id="services"
      style={{ opacity, scale }}
      className="relative py-28 bg-gradient-to-b from-purple-900/90 via-indigo-950/90 to-purple-900/90
        backdrop-blur-lg scroll-mt-20 overflow-hidden"
    >
      {/* Elementos decorativos mejorados */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        {/* Gradientes de fondo mejorados */}
        <div className="absolute -top-40 -right-40 w-[30rem] h-[30rem] bg-gradient-to-b from-yellow-500/10 to-transparent rounded-full blur-[80px]"></div>
        <div className="absolute -bottom-20 -left-20 w-[26rem] h-[26rem] bg-gradient-to-t from-purple-500/10 to-transparent rounded-full blur-[80px]"></div>
        
        {/* CÃ­rculos decorativos animados */}
        <motion.div 
          animate={{ 
            rotate: [0, 360],
            opacity: [0.05, 0.1, 0.05] 
          }}
          transition={{ 
            duration: 25, 
            repeat: Infinity,
            ease: "linear" 
          }}
          className="absolute top-1/4 right-1/4 w-[40rem] h-[40rem] border border-yellow-500/5 rounded-full"
        ></motion.div>
        
        <motion.div 
          animate={{ 
            rotate: [0, -360],
            opacity: [0.03, 0.08, 0.03] 
          }}
          transition={{ 
            duration: 30, 
            repeat: Infinity,
            ease: "linear" 
          }}
          className="absolute bottom-1/3 left-1/4 w-[35rem] h-[35rem] border border-purple-500/5 rounded-full"
        ></motion.div>
        
        {/* Puntos decorativos */}
        {[...Array(10)].map((_, index) => (
          <motion.div 
            key={`dot-${index}`}
            initial={{ opacity: 0.2 }}
            animate={{ 
              opacity: [0.2, 0.6, 0.2],
              scale: [1, 1.2, 1]
            }}
            transition={{ 
              duration: 3 + index % 4,
              repeat: Infinity,
              delay: index * 0.4,
              ease: "easeInOut"
            }}
            className={`absolute bg-${index % 2 === 0 ? 'yellow' : 'purple'}-300/20 rounded-full w-2 h-2`}
            style={{ 
              top: `${10 + index * 8}%`, 
              left: `${5 + index * 9}%`,
              filter: "blur(1px)"
            }}
          />
        ))}
      </div>
      
      <div className="container mx-auto px-6 relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true, margin: "-100px" }}
          transition={{ duration: 0.8 }}
          className="text-center mb-20"
        >
          {/* Badge mejorado - Ahora posicionado correctamente */}
          <div className="flex justify-center mb-3">
            <div className="inline-flex items-center gap-2 bg-gradient-to-r from-purple-500/10 via-indigo-500/10 to-purple-500/10 
              backdrop-blur-sm px-5 py-2 rounded-full border border-purple-500/30">
              <FiPackage className="text-purple-300" />
              <span className="text-[0.96em] font-medium text-purple-300 uppercase tracking-wider">
                Paquetes Disponibles
              </span>
            </div>
          </div>
          
          {/* TÃ­tulo mejorado */}
          <h2 className="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6 font-funhouse relative inline-block">
            Nuestros Paquetes
            <motion.span 
              className="absolute -bottom-2 left-0 w-full h-1 bg-gradient-to-r from-purple-300/0 via-purple-300/70 to-purple-300/0"
              animate={{ 
                scaleX: [0, 1, 1, 0],
                x: ["-100%", "0%", "0%", "100%"]
              }}
              transition={{ 
                duration: 4,  
                repeat: Infinity,
                ease: "easeInOut" 
              }}
            />
          </h2>
          
          {/* DescripciÃ³n mejorada */}
          <motion.p 
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ delay: 0.3, duration: 0.8 }}
            className="text-xl text-gray-200 max-w-2xl mx-auto leading-relaxed"
          >
            Elige el paquete perfecto para tu celebraciÃ³n y dÃ©janos hacer de tu evento algo inolvidable
            <FiStar className="inline ml-2 text-sm text-yellow-300" />
          </motion.p>
        </motion.div>

        {/* Contenedor de tarjetas con animaciÃ³n */}
        <motion.div
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, margin: "-50px" }}
          className="grid grid-cols-1 lg:grid-cols-2 gap-12 max-w-7xl mx-auto relative"
        >
          {/* Efecto de brillo decorativo detrÃ¡s de las tarjetas */}
          <div className="absolute -inset-10 bg-gradient-to-tr from-purple-500/5 via-indigo-500/0 to-yellow-500/5 rounded-3xl blur-3xl -z-10"></div>
          
          {/* Tarjetas de servicio */}
          {Object.entries(services).map(([key, service], index) => (
            <ServiceCard key={key} service={service} index={index} />
          ))}
        </motion.div>
      </div>
    </motion.section>
  );
};

export default ServicesSection;\n\n

=== ./public/components/ui/ContactInfo.jsx ===
import React from 'react'
import { motion } from 'framer-motion'
import { FiPhone, FiMail, FiMapPin } from 'react-icons/fi'

/**
 * Componente que muestra la informaciÃ³n de contacto organizada
 * con animaciones de entrada
 */
const ContactInfo = () => {
  const contactItems = [
    {
      icon: FiPhone,
      title: "TelÃ©fono",
      content: "+52 (33) 3230 0243"
    },
    {
      icon: FiMail,
      title: "Email",
      content: "contacto@tramboory.com"
    },
    {
      icon: FiMapPin,
      title: "UbicaciÃ³n",
      content: [
        "P. Solares 1639",
        "Solares Residencial",
        "Zapopan, Jalisco, C.P. 45019"
      ]
    }
  ];

  return (
    <div className="flex flex-col space-y-8">
      {contactItems.map((item, index) => (
        <motion.div
          key={index}
          initial={{ opacity: 0, x: -20 }}
          whileInView={{ opacity: 1, x: 0 }}
          viewport={{ once: true }}
          transition={{ delay: index * 0.2 }}
          className="flex items-start space-x-4 p-4 rounded-xl hover:bg-white/5 transition-colors duration-300"
        >
          <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-purple-500/20 to-purple-700/20 flex items-center justify-center border border-purple-500/30">
            <item.icon className="text-yellow-400 text-xl" />
          </div>
          <div>
            <h3 className="text-white font-bold">{item.title}</h3>
            {Array.isArray(item.content) ? (
              item.content.map((line, i) => (
                <p key={i} className="text-gray-300">{line}</p>
              ))
            ) : item.title === "TelÃ©fono" ? (
              <motion.a
                href={`https://wa.me/523332300243?text=Hola%2C%20me%20gustar%C3%ADa%20obtener%20m%C3%A1s%20informaci%C3%B3n%20sobre%20sus%20servicios%20para%20fiestas%20infantiles.`}
                target="_blank"
                rel="noopener noreferrer"
                className="text-gray-300 hover:text-green-400 transition-colors duration-300 flex items-center"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                transition={{ type: "spring", stiffness: 400, damping: 15 }}
              >
                {item.content}
              </motion.a>
            ) : (
              <p className="text-gray-300">{item.content}</p>
            )}
          </div>
        </motion.div>
      ))}
    </div>
  );
};

export default ContactInfo;\n\n

=== ./public/components/ui/FeatureCard.jsx ===
import React from 'react'
import { motion } from 'framer-motion'

/**
 * Componente para mostrar caracterÃ­sticas destacadas con animaciones
 * y diferentes colores segÃºn el tipo de caracterÃ­stica
 */
const FeatureCard = ({ feature, index }) => {
  const cardVariants = {
    hidden: { opacity: 0, y: 50 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        type: "spring",
        duration: 0.6,
        delay: index * 0.1
      }
    },
    hover: {
      y: -10,
      transition: {
        type: "spring",
        stiffness: 300,
        damping: 20
      }
    }
  };

  const gradients = {
    green: 'from-green-400 to-green-600',
    yellow: 'from-yellow-400 to-yellow-600',
    pink: 'from-pink-400 to-pink-600',
    blue: 'from-blue-400 to-blue-600',
    purple: 'from-purple-400 to-purple-600',
    red: 'from-red-400 to-red-600'
  };

  return (
    <motion.div
      variants={cardVariants}
      initial="hidden"
      whileInView="visible"
      whileHover="hover"
      viewport={{ once: true }}
      className="feature-card p-6 rounded-xl bg-gradient-to-br from-white/5 to-white/10 backdrop-blur-lg
        border border-white/10 hover:border-white/30 hover:shadow-xl 
        transition-all duration-300 overflow-hidden relative"
    >
      {/* Elemento decorativo */}
      <div className="absolute -right-8 -bottom-8 w-24 h-24 rounded-full bg-gradient-to-tr from-white/5 to-transparent"></div>
      
      <div
        className={`w-14 h-14 rounded-xl mb-6 flex items-center justify-center
        bg-gradient-to-r ${gradients[feature.color] || gradients.blue} shadow-lg`}
      >
        <feature.icon className="text-2xl text-white" />
      </div>
      <h3 className="text-2xl font-bold text-white mb-3 font-funhouse">{feature.title}</h3>
      <p className="text-gray-300 relative z-10">{feature.description}</p>
      
      <div className="absolute bottom-0 left-0 h-1 w-0 bg-gradient-to-r from-transparent via-white/20 to-transparent
        group-hover:w-full transition-all duration-700"></div>
    </motion.div>
  );
};

export default FeatureCard;\n\n

=== ./public/components/ui/ScrollIndicator.jsx ===
import React from 'react'
import { motion } from 'framer-motion'
import { FiArrowDown } from 'react-icons/fi'

/**
 * Componente que muestra un indicador animado para hacer scroll
 * hacia una secciÃ³n especÃ­fica
 */
const ScrollIndicator = ({ targetId }) => (
  <div className="w-full flex justify-center">
    <motion.div
      animate={{ y: [0, 10, 0] }}
      transition={{ duration: 1.5, repeat: Infinity }}
      className="flex flex-col items-center"
    >
      <span className="text-white/70 text-sm mb-2">Descubre mÃ¡s</span>
      <a
        href={`#${targetId}`}
        className="flex items-center justify-center w-10 h-10 rounded-full bg-white/10 backdrop-blur-sm
        border border-white/20 hover:bg-white/20 transition-all duration-300"
        aria-label="Scroll para descubrir mÃ¡s"
      >
        <FiArrowDown className="text-white" />
      </a>
    </motion.div>
  </div>
);

export default ScrollIndicator;\n\n

=== ./public/components/ui/ServiceCard.jsx ===
import React from 'react'
import { Link } from 'react-router-dom'
import { motion } from 'framer-motion'
import { FiArrowRight, FiStar } from 'react-icons/fi'

/**
 * Componente de tarjeta para mostrar informaciÃ³n de servicios
 * con animaciones y estilos condicionales segÃºn si es recomendado
 */
const ServiceCard = ({ service, index }) => {
  const cardVariants = {
    hidden: { opacity: 0, y: 50 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        type: "spring",
        duration: 0.8,
        bounce: 0.3,
        delay: index * 0.2
      }
    },
    hover: {
      y: -10,
      transition: {
        type: "spring",
        stiffness: 300,
        damping: 20
      }
    }
  };

  const featureVariants = {
    hidden: { opacity: 0, x: -20 },
    visible: i => ({
      opacity: 1,
      x: 0,
      transition: {
        type: "spring",
        duration: 0.5,
        delay: i * 0.1
      }
    })
  };

  return (
    <motion.div
      variants={cardVariants}
      initial="hidden"
      whileInView="visible"
      whileHover="hover"
      viewport={{ once: true, margin: "-50px" }}
      className={`service-card relative p-8 rounded-2xl backdrop-blur-lg overflow-hidden
        transform-gpu will-change-transform shadow-xl
        transition-all duration-300
        ${
          service.recommended
            ? 'bg-gradient-to-br from-purple-900/80 to-purple-800/80 border-2 border-yellow-400/50'
            : 'bg-gradient-to-br from-indigo-900/50 to-indigo-800/50 border border-white/20'
        }`}
    >
      {/* Elementos decorativos */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none opacity-20">
        <div className={`absolute w-64 h-64 rounded-full bg-gradient-to-tr ${service.recommended ? 'from-yellow-400/30' : 'from-indigo-400/30'} to-transparent -top-32 -right-32`}></div>
        <div className={`absolute w-64 h-64 rounded-full bg-gradient-to-tr ${service.recommended ? 'from-yellow-400/20' : 'from-indigo-400/20'} to-transparent -bottom-32 -left-32`}></div>
      </div>
      
      {service.recommended && (
        <div className="absolute top-0 right-0 z-20">
          <div className="bg-gradient-to-r from-yellow-500 to-yellow-400 text-purple-900 
              py-1 px-3 font-semibold text-sm shadow-lg flex items-center justify-center
              rounded-bl-md">
            <FiStar className="mr-1.5" /> Recomendado
          </div>
        </div>
      )}

      <div className="mb-6 relative">
        <h3 className="text-2xl font-bold text-white mb-2 font-funhouse">{service.title}</h3>
        <p className="text-gray-300">{service.description}</p>
        <div className={`text-3xl font-bold mt-4 ${service.recommended ? 'text-yellow-400' : 'text-white'}`}>
          ${service.price}
          <span className="text-sm font-normal text-gray-400 ml-1">MXN</span>
        </div>
      </div>

      <div className="space-y-4 mb-8">
        {service.features.map((feature, idx) => (
          <motion.div
            key={idx}
            custom={idx}
            variants={featureVariants}
            className="flex items-start space-x-3"
          >
            <div className={`flex-shrink-0 w-8 h-8 rounded-lg flex items-center justify-center ${service.recommended ? 'bg-yellow-400/20' : 'bg-white/10'}`}>
              <feature.icon className={`w-4 h-4 ${service.recommended ? 'text-yellow-400' : 'text-white'}`} />
            </div>
            <div className="flex-1">
              <p className="font-medium text-white">{feature.title}</p>
              <p className="text-sm text-gray-300">{feature.description}</p>
            </div>
          </motion.div>
        ))}
      </div>

      <div className="flex flex-wrap gap-2 mb-8">
        {service.highlights.map((highlight, idx) => (
          <motion.span
            key={idx}
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: idx * 0.1 }}
            className={`px-3 py-1 rounded-full text-sm font-medium
              ${service.recommended 
                ? 'bg-yellow-400/20 text-yellow-300 border border-yellow-400/30' 
                : 'bg-white/10 text-white border border-white/20'}`}
          >
            {highlight}
          </motion.span>
        ))}
      </div>

      <Link to="/appointments">
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          className={`w-full py-3 px-6 rounded-lg font-semibold flex items-center justify-center space-x-2
            transition-all duration-300 transform-gpu
            ${
              service.recommended
                ? 'bg-gradient-to-r from-yellow-300 to-yellow-500 text-purple-900 hover:shadow-yellow-400/20 hover:shadow-lg'
                : 'bg-gradient-to-r from-white/10 to-white/20 text-white hover:bg-white/20 hover:shadow-white/5 hover:shadow-lg'
            }`}
        >
          <span>Reservar Ahora</span>
          <FiArrowRight className="ml-2" />
        </motion.button>
      </Link>
    </motion.div>
  );
};

export default ServiceCard;\n\n

=== ./public/components/ui/SocialLinks.jsx ===
import React from 'react'
import { motion } from 'framer-motion'
import { FiInstagram } from 'react-icons/fi'

/**
 * Componente que muestra enlaces a redes sociales
 * con animaciones al interactuar
 */
const SocialLinks = () => {
  const socialLinks = [
    {
      url: "https://www.instagram.com/tramboory/",
      label: "Tramboory Mx"
    },
    {
      url: "https://www.instagram.com/oss.artchive/?__pwa=1",
      label: "Oss Artchive"
    }
  ];

  // FunciÃ³n para manejar el clic en los enlaces de Instagram
  const handleInstagramClick = (url) => {
    window.open(url, '_blank', 'noopener,noreferrer');
  };

  return (
    <div className="mt-10">
      <h3 className="text-center md:text-left text-white text-xl mb-6 font-funhouse">
        SÃ­guenos en redes sociales
      </h3>
      <div className="flex justify-center md:justify-start space-x-6">
        {socialLinks.map((link, index) => (
          <motion.a
            key={index}
            href={link.url}
            target="_blank"
            rel="noopener noreferrer"
            aria-label={link.label}
            onClick={(e) => {
              e.preventDefault();
              handleInstagramClick(link.url);
            }}
            whileHover={{ scale: 1.1, rotate: 5 }}
            whileTap={{ scale: 0.95 }}
            className="w-12 h-12 rounded-xl bg-gradient-to-br from-purple-600/20 to-pink-600/20 flex items-center justify-center
              hover:bg-white/20 transition-colors duration-300 border border-purple-500/30 shadow-lg
              cursor-pointer z-10 relative"
          >
            <FiInstagram className="text-yellow-400 text-xl" aria-hidden="true" />
          </motion.a>
        ))}
      </div>
    </div>
  );
};

export default SocialLinks;\n\n

=== ./public/components/ui/WhatsAppButton.jsx ===
import React from 'react'
import { motion } from 'framer-motion'
import { FiMessageCircle } from 'react-icons/fi'

/**
 * BotÃ³n para contacto directo vÃ­a WhatsApp
 * con animaciones de hover y tap
 */
const WhatsAppButton = () => {
  // FunciÃ³n para manejar el clic en el botÃ³n de WhatsApp
  const handleWhatsAppClick = (url) => {
    window.open(url, '_blank', 'noopener,noreferrer');
  };

  const whatsappUrl = "https://wa.me/523332300243?text=Hola%2C%20me%20gustar%C3%ADa%20obtener%20m%C3%A1s%20informaci%C3%B3n%20sobre%20sus%20servicios%20para%20fiestas%20infantiles.";

  return (
    <div className="flex items-center relative z-30">
      <motion.button
        onClick={() => handleWhatsAppClick(whatsappUrl)}
        whileHover={{ scale: 1.1, rotate: 5 }}
        whileTap={{ scale: 0.95 }}
        className="inline-flex items-center justify-center space-x-2 py-3 px-6
          bg-gradient-to-r from-green-500 to-green-600 text-white rounded-xl font-bold
          hover:shadow-lg hover:shadow-green-500/20
          transition-all duration-300 border border-green-400/30 cursor-pointer
          relative z-50"
        aria-label="Contactar por WhatsApp"
      >
        <FiMessageCircle className="text-xl" />
        <span>Contactar por WhatsApp</span>
      </motion.button>
    </div>
  );
};

export default WhatsAppButton;\n\n

=== ./public/hooks/index.js ===
// Exportar todos los componentes de public/hooks
\n\n

=== ./public/index.js ===
export * from './components';
export * from './pages';
export * from './services';
export * from './hooks';
\n\n

=== ./public/pages/AboutTramboory.jsx ===
import React, { useState, useEffect, useRef } from 'react'
import { motion } from 'framer-motion'
import { 
  FiInfo, 
  FiUsers, 
  FiHeart, 
  FiSmile, 
  FiStar, 
  FiCalendar, 
  FiMapPin, 
  FiMessageCircle,
  FiCamera,
  FiArrowRight
} from 'react-icons/fi'
import CloudinaryCarousel from '@shared/components/cloudinary/CloudinaryCarousel'
import { getImagenesCarousel } from '@domains/galeria/services/galeriaService'
import NavbarPublic from '@shared/components/NavbarPublic'

// Componentes decorativos
import ParticlesBackground from './home-components/decorative/ParticlesBackground'
import AnimatedBalloons from './home-components/decorative/AnimatedBalloons'
import BackgroundVideoComponent from './home-components/decorative/BackgroundVideoComponent'

/**
 * PÃ¡gina Acerca de Tramboory - rediseÃ±ada para mantener consistencia con Home.jsx
 */
const AboutTramboory = () => {
  // Referencias para elementos que necesitan animaciÃ³n
  const videoRef = useRef(null);
  const [isVideoPlaying, setIsVideoPlaying] = useState(true);
  
  // Toggle para el video de fondo
  const toggleVideo = () => {
    if (videoRef.current) {
      if (isVideoPlaying) {
        videoRef.current.pause();
      } else {
        videoRef.current.play();
      }
      setIsVideoPlaying(!isVideoPlaying);
    }
  };
  const [carouselImages, setCarouselImages] = useState([])
  const [isLoadingImages, setIsLoadingImages] = useState(true)

  // Cargar imÃ¡genes del carrusel desde la API
  useEffect(() => {
    const loadImages = async () => {
      try {
        setIsLoadingImages(true)
        const imagenes = await getImagenesCarousel()
        
        // Ordenar por el campo orden y obtener solo las URLs de las imÃ¡genes activas
        const imageUrls = imagenes
          .filter(img => img.activo)
          .sort((a, b) => a.orden - b.orden)
          .map(img => img.imagen_url)
        
        // Si no hay imÃ¡genes en la base de datos, usar imÃ¡genes de ejemplo
        if (imageUrls.length === 0) {
          setCarouselImages([
            'samples/landscapes/nature-mountains',
            'samples/landscapes/beach-boat',
            'samples/landscapes/girl-urban-view',
            'samples/food/dessert',
            'samples/people/bicycle'
          ])
        } else {
          setCarouselImages(imageUrls)
        }
      } catch (error) {
        console.error('Error cargando imÃ¡genes del carrusel:', error)
        // En caso de error, usar imÃ¡genes de ejemplo
        setCarouselImages([
          'samples/landscapes/nature-mountains',
          'samples/landscapes/beach-boat',
          'samples/landscapes/girl-urban-view',
          'samples/landscapes/architecture-signs'
        ])
      } finally {
        setIsLoadingImages(false)
      }
    }
    
    loadImages()
  }, [])

  // Componente FeatureCard para destacar caracterÃ­sticas de Tramboory
  const FeatureCard = ({ feature, index }) => {
    const cardVariants = {
      hidden: { opacity: 0, y: 50 },
      visible: {
        opacity: 1,
        y: 0,
        transition: {
          type: "spring",
          duration: 0.6,
          delay: index * 0.1
        }
      },
      hover: {
        y: -10,
        transition: {
          type: "spring",
          stiffness: 300,
          damping: 20
        }
      }
    }

    const gradients = {
      green: 'from-green-400 to-green-600',
      yellow: 'from-yellow-400 to-yellow-600',
      pink: 'from-pink-400 to-pink-600',
      blue: 'from-blue-400 to-blue-600',
      purple: 'from-purple-400 to-purple-600',
      red: 'from-red-400 to-red-600'
    }

    return (
      <motion.div
        variants={cardVariants}
        initial="hidden"
        whileInView="visible"
        whileHover="hover"
        viewport={{ once: true }}
        className="feature-card p-8 rounded-xl bg-white/10 backdrop-blur-lg
          border border-white/20 hover:border-white/40 hover:shadow-xl 
          transition-all duration-300"
      >
        <div
          className={`w-16 h-16 rounded-full mb-6 flex items-center justify-center
          bg-gradient-to-r ${gradients[feature.color] || gradients.blue}`}
        >
          <feature.icon className="text-2xl text-white" />
        </div>
        <h3 className="text-2xl font-bold text-white mb-4 font-funhouse">{feature.title}</h3>
        <p className="text-gray-300">{feature.description}</p>
      </motion.div>
    )
  }

  // Datos - CaracterÃ­sticas principales de Tramboory
  const features = [
    {
      icon: FiHeart,
      title: 'Nuestro CorazÃ³n',
      description: 'En Tramboory creemos en crear momentos inolvidables para las familias, ofreciendo un espacio donde la diversiÃ³n y la magia se encuentran.',
      color: 'pink'
    },
    {
      icon: FiUsers,
      title: 'Equipo Apasionado',
      description: 'Nuestro equipo estÃ¡ dedicado a hacer de cada evento una experiencia perfecta, cuidando hasta el mÃ¡s mÃ­nimo detalle.',
      color: 'purple'
    },
    {
      icon: FiStar,
      title: 'Experiencia Premium',
      description: 'Ofrecemos un servicio de primera calidad, con instalaciones modernas y seguras para que todos disfruten sin preocupaciones.',
      color: 'yellow'
    },
    {
      icon: FiCalendar,
      title: 'Historia y Trayectoria',
      description: 'Desde nuestra fundaciÃ³n, hemos sido parte de miles de celebraciones, creciendo y mejorando constantemente.',
      color: 'blue'
    },
    {
      icon: FiSmile,
      title: 'DiversiÃ³n Garantizada',
      description: 'DiseÃ±amos cada actividad y espacio para asegurar que todos los asistentes, grandes y pequeÃ±os, disfruten al mÃ¡ximo.',
      color: 'green'
    },
    {
      icon: FiMapPin,
      title: 'UbicaciÃ³n EstratÃ©gica',
      description: 'Nos encontramos en una zona accesible de Zapopan, con estacionamiento y todas las facilidades para tu comodidad.',
      color: 'red'
    }
  ]

  // Datos de historia de Tramboory
  const historyMilestones = [
    {
      year: '2018',
      title: 'Nace una Idea',
      description: 'Tramboory surge como un sueÃ±o de crear un espacio Ãºnico para celebraciones infantiles en Guadalajara.'
    },
    {
      year: '2019',
      title: 'Abrimos Nuestras Puertas',
      description: 'Inauguramos nuestras instalaciones en Zapopan, con una gran fiesta de apertura que marcÃ³ el inicio de nuestra historia.'
    },
    {
      year: '2020',
      title: 'Superando DesafÃ­os',
      description: 'A pesar de los retos globales, nos reinventamos para seguir ofreciendo experiencias seguras y memorables.'
    },
    {
      year: '2021',
      title: 'Crecimiento y ExpansiÃ³n',
      description: 'Ampliamos nuestros servicios y mejoramos nuestras instalaciones para ofrecer mÃ¡s opciones a nuestros clientes.'
    },
    {
      year: '2022',
      title: 'InnovaciÃ³n Constante',
      description: 'Implementamos nuevas tecnologÃ­as y temas de decoraciÃ³n para mantenernos a la vanguardia.'
    },
    {
      year: '2023',
      title: 'Comunidad Tramboory',
      description: 'Celebramos haber sido parte de mÃ¡s de 1,000 eventos y construido una comunidad fiel de familias que confÃ­an en nosotros.'
    }
  ]

  return (
    <div className="relative min-h-screen overflow-hidden bg-gradient-to-br from-purple-950 to-indigo-950">
      {/* Elementos decorativos de fondo */}
      <ParticlesBackground />
      <AnimatedBalloons />
      
      {/* Video de Fondo */}
      <BackgroundVideoComponent
        videoRef={videoRef}
        isVideoPlaying={isVideoPlaying}
        toggleVideo={toggleVideo}
      />

      {/* Navbar pÃºblico */}
      <NavbarPublic />
      
      {/* SecciÃ³n Hero */}
      <section className="relative pt-32 pb-16 bg-gradient-to-b from-black/40 to-transparent">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center mb-12"
          >
            <h1 className="text-5xl md:text-6xl font-bold text-white mb-6 font-funhouse">
              Conoce{' '}
              <span className="text-gradient bg-clip-text text-transparent bg-gradient-to-r from-yellow-300 to-pink-500">
                Tramboory
              </span>
            </h1>
            <p className="text-xl md:text-2xl text-gray-200 max-w-3xl mx-auto">
              Un espacio mÃ¡gico donde los sueÃ±os se convierten en celebraciones inolvidables
            </p>
          </motion.div>

          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            className="mb-16"
          >
            <CloudinaryCarousel 
              height="500px"
              autoPlaySpeed={3000}
              imageWidth={1.8}
              images={carouselImages}
            />
          </motion.div>
        </div>
        
        {/* Decorative Elements */}
        <div className="absolute top-0 inset-x-0 h-64 bg-gradient-to-b from-black/50 to-transparent pointer-events-none" />
        <div className="absolute bottom-0 inset-x-0 h-64 bg-gradient-to-t from-purple-900/50 to-transparent pointer-events-none" />
      </section>

      {/* SecciÃ³n QuiÃ©nes Somos */}
      <section className="relative py-20 bg-gradient-to-b from-purple-900/90 to-indigo-900/90">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-6 font-funhouse">
              Â¿QuiÃ©nes Somos?
            </h2>
            <p className="text-xl text-gray-300 max-w-3xl mx-auto">
              En Tramboory somos especialistas en crear momentos llenos de alegrÃ­a y diversiÃ³n para toda la familia
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-5xl mx-auto">
            <motion.div
              initial={{ opacity: 0, x: -30 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              className="bg-white/10 backdrop-blur-lg p-8 rounded-2xl border border-white/20"
            >
              <div className="flex items-center mb-6">
                <FiInfo className="text-3xl text-yellow-400 mr-4" />
                <h3 className="text-2xl font-bold text-white font-funhouse">Nuestra MisiÃ³n</h3>
              </div>
              <p className="text-gray-300 mb-4">
                Crear experiencias mÃ¡gicas y memorables para las familias, ofreciendo un espacio seguro y divertido donde los niÃ±os puedan celebrar momentos especiales y los adultos puedan disfrutar sin preocupaciones.
              </p>
              <p className="text-gray-300">
                Nos dedicamos a transformar cada evento en una celebraciÃ³n Ãºnica, adaptada a los gustos y necesidades de cada cliente, con atenciÃ³n personalizada y servicio de excelencia.
              </p>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, x: 30 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              className="bg-white/10 backdrop-blur-lg p-8 rounded-2xl border border-white/20"
            >
              <div className="flex items-center mb-6">
                <FiStar className="text-3xl text-yellow-400 mr-4" />
                <h3 className="text-2xl font-bold text-white font-funhouse">Nuestra VisiÃ³n</h3>
              </div>
              <p className="text-gray-300 mb-4">
                Ser reconocidos como el lugar preferido para celebraciones infantiles en Guadalajara, innovando constantemente en nuestros servicios y creando tendencias en el mercado.
              </p>
              <p className="text-gray-300">
                Buscamos expandir nuestra presencia y llevar la magia de Tramboory a mÃ¡s familias, manteniendo siempre nuestros valores de excelencia, creatividad y pasiÃ³n por lo que hacemos.
              </p>
            </motion.div>
          </div>
        </div>
      </section>

      {/* SecciÃ³n CaracterÃ­sticas */}
      <section className="relative py-20 bg-gradient-to-b from-indigo-900/90 to-purple-900/90">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-6 font-funhouse">
              Â¿Por quÃ© Tramboory?
            </h2>
            <p className="text-xl text-gray-300 max-w-3xl mx-auto">
              Descubre lo que nos hace especiales y por quÃ© tantas familias confÃ­an en nosotros
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto">
            {features.map((feature, index) => (
              <FeatureCard key={index} feature={feature} index={index} />
            ))}
          </div>
        </div>
      </section>

      {/* SecciÃ³n Historia */}
      <section className="relative py-20 bg-gradient-to-b from-purple-900/90 to-black/90">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-6 font-funhouse">
              Nuestra Historia
            </h2>
            <p className="text-xl text-gray-300 max-w-3xl mx-auto">
              El camino que hemos recorrido para convertirnos en el espacio mÃ¡gico que somos hoy
            </p>
          </motion.div>

          <div className="relative max-w-4xl mx-auto">
            {/* LÃ­nea de tiempo vertical */}
            <div className="absolute left-1/2 top-0 bottom-0 w-1 bg-gradient-to-b from-yellow-400 to-pink-500 transform -translate-x-1/2"></div>
            
            {historyMilestones.map((milestone, index) => (
              <motion.div 
                key={index}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true, margin: "-100px" }}
                transition={{ delay: index * 0.1 }}
                className={`relative mb-16 flex ${
                  index % 2 === 0 ? "flex-row" : "flex-row-reverse"
                }`}
              >
                {/* CÃ­rculo en la lÃ­nea de tiempo */}
                <div className="absolute left-1/2 top-0 w-8 h-8 bg-gradient-to-r from-yellow-400 to-pink-500 rounded-full transform -translate-x-1/2 z-10 border-4 border-purple-900"></div>
                
                {/* Contenedor del contenido */}
                <div className={`w-5/12 ${index % 2 === 0 ? "pr-8 text-right" : "pl-8 text-left"}`}>
                  <div className="bg-white/10 backdrop-blur-lg p-6 rounded-xl border border-white/20 hover:border-white/40 transition-all duration-300 hover:shadow-xl">
                    <div className="inline-block px-4 py-2 bg-gradient-to-r from-yellow-400 to-pink-500 text-purple-900 font-bold rounded-full mb-4">
                      {milestone.year}
                    </div>
                    <h3 className="text-xl font-bold text-white mb-3 font-funhouse">{milestone.title}</h3>
                    <p className="text-gray-300">{milestone.description}</p>
                  </div>
                </div>
                
                {/* Espacio para el lado opuesto */}
                <div className="w-5/12"></div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* SecciÃ³n CTA */}
      <section className="relative py-16 bg-gradient-to-b from-black/90 to-purple-900/90">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            whileInView={{ opacity: 1, scale: 1 }}
            viewport={{ once: true }}
            className="max-w-4xl mx-auto bg-gradient-to-r from-purple-800/80 to-indigo-800/80 p-10 rounded-2xl border border-white/10 text-center backdrop-blur-lg"
          >
            <h2 className="text-3xl md:text-4xl font-bold text-white mb-6 font-funhouse">
              Â¡Vive la Experiencia Tramboory!
            </h2>
            <p className="text-xl text-gray-200 mb-10">
              Estamos listos para hacer de tu prÃ³xima celebraciÃ³n un momento inolvidable
            </p>
            <div className="flex flex-col sm:flex-row items-center justify-center gap-6">
              <motion.button
                onClick={() => {
                  window.open("https://wa.me/523332300243?text=Hola%2C%20me%20gustar%C3%ADa%20obtener%20m%C3%A1s%20informaci%C3%B3n%20sobre%20sus%20servicios%20para%20fiestas%20infantiles.", '_blank', 'noopener,noreferrer');
                }}
                whileHover={{ scale: 1.1, rotate: 5 }}
                whileTap={{ scale: 0.95 }}
                className="inline-flex items-center justify-center space-x-2 py-3 px-6
                  bg-green-500 text-white rounded-lg font-bold hover:bg-green-600
                  transition-colors duration-300 shadow-lg cursor-pointer"
                aria-label="Contactar por WhatsApp"
              >
                <FiMessageCircle className="text-xl" />
                <span>Contactar por WhatsApp</span>
              </motion.button>
              
              <motion.a
                href="/appointments"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="px-8 py-3 bg-gradient-to-r from-yellow-400 to-yellow-500
                  text-purple-900 rounded-lg font-bold text-lg shadow-xl
                  hover:from-yellow-500 hover:to-yellow-600 transition-all duration-300 flex items-center"
              >
                <span>Reservar Ahora</span>
                <FiArrowRight className="ml-2" />
              </motion.a>
            </div>
          </motion.div>
        </div>
      </section>

      {/* SecciÃ³n GalerÃ­a al final */}
      <section className="relative py-20 bg-gradient-to-b from-purple-900/90 to-black/90">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-6 font-funhouse">
              Momentos MÃ¡gicos
            </h2>
            <p className="text-xl text-gray-300 max-w-3xl mx-auto">
              Algunos recuerdos de las celebraciones especiales en nuestras instalaciones
            </p>
          </motion.div>

          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            viewport={{ once: true }}
            className="mb-16"
          >
            <CloudinaryCarousel 
              height="450px"
              autoPlaySpeed={2500}
              imageWidth={1.6}
              images={carouselImages}
            />
          </motion.div>

          <div className="flex justify-center">
            <motion.a
              href="https://www.instagram.com/tramboory/"
              target="_blank"
              rel="noopener noreferrer"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="flex items-center px-8 py-4 bg-white/10 backdrop-blur-sm text-white 
                rounded-full font-bold text-lg border-2 border-yellow-400/30 hover:bg-white/20
                transition-all duration-300"
            >
              <FiCamera className="mr-2" />
              Ver mÃ¡s en Instagram
            </motion.a>
          </div>
        </div>
        
        {/* Decorative Elements */}
        <div className="absolute top-0 inset-x-0 h-64 bg-gradient-to-b from-purple-900/20 to-transparent pointer-events-none" />
        <div className="absolute bottom-0 inset-x-0 h-64 bg-gradient-to-t from-black/20 to-transparent pointer-events-none" />
      </section>
    </div>
  )
}

export default AboutTramboory\n\n

=== ./public/pages/Appointment.jsx ===
import React, { useState, useEffect, useLayoutEffect, useRef } from 'react'
import { Link } from 'react-router-dom'
import { motion, AnimatePresence } from 'framer-motion'
import { gsap } from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger'
import NavbarPublic from '@shared/components/NavbarPublic'
import {
  FiClock,
  FiImage,
  FiCoffee,
  FiMusic,
  FiUsers,
  FiArrowRight,
  FiCheck,
  FiX,
  FiPhone,
  FiMessageSquare,
  FiPlus,
  FiMinus,
  FiPlay,
  FiPause
} from 'react-icons/fi'

// Componentes decorativos
import ParticlesBackground from './home-components/decorative/ParticlesBackground'
import AnimatedBalloons from './home-components/decorative/AnimatedBalloons'
import BackgroundVideoComponent from './home-components/decorative/BackgroundVideoComponent'

gsap.registerPlugin(ScrollTrigger)

/**
 * Componente de tarjeta de servicio para mostrar los paquetes 
 * disponibles con animaciones y detalles expandibles
 */
const ServiceCard = ({
  title,
  description,
  items,
  price,
  recommended,
  type
}) => {
  const [expandedCategory, setExpandedCategory] = useState(null)
  const [isHovered, setIsHovered] = useState(false)

  const cardVariants = {
    hover: {
      scale: 1.02,
      y: -5,
      transition: {
        type: 'spring',
        stiffness: 300,
        damping: 20
      }
    }
  }

  const categoryVariants = {
    collapsed: { height: 0, opacity: 0 },
    expanded: { height: 'auto', opacity: 1 }
  }

  return (
    <motion.div
      variants={cardVariants}
      whileHover='hover'
      onHoverStart={() => setIsHovered(true)}
      onHoverEnd={() => setIsHovered(false)}
      className={`bg-white/10 backdrop-blur-lg rounded-2xl shadow-xl p-8 relative cursor-pointer
            ${
              recommended
                ? 'border-4 border-yellow-400'
                : 'border border-white/20'
            }
            transform transition-all duration-300`}
    >
      {recommended && (
        <motion.div
          initial={{ scale: 0 }}
          animate={{ scale: 1 }}
          className='absolute -top-4 left-1/2 transform -translate-x-1/2'
        >
          <span className='bg-yellow-400 text-purple-900 px-6 py-2 rounded-full text-sm font-semibold shadow-lg'>
            Paquete Completo
          </span>
        </motion.div>
      )}

      {/* Efecto de brillo en hover */}
      <div
        className={`absolute inset-0 rounded-2xl transition-opacity duration-300 pointer-events-none
              ${isHovered ? 'opacity-100' : 'opacity-0'}
              bg-gradient-to-r from-transparent via-white/10 to-transparent
              animate-shine`}
      />

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className='mb-6'
      >
        <span
          className={`text-sm font-semibold ${
            type === 'normal' ? 'text-yellow-300' : 'text-purple-300'
          }`}
        >
          {type === 'normal' ? 'Todo Incluido' : 'Renta de Espacio'}
        </span>
        <h3 className='text-2xl font-bold text-white mt-2'>{title}</h3>
        <p className='text-gray-300 mt-2'>{description}</p>

        <div className='mt-4 text-3xl font-bold text-white'>
          ${price}
          <span className='text-base font-normal text-gray-400'>/evento</span>
        </div>
      </motion.div>

      <div className='space-y-4 mb-8'>
        {Object.entries(items).map(([category, categoryItems], index) => (
          <motion.div
            key={category}
            className='rounded-lg overflow-hidden'
            initial={false}
            animate={expandedCategory === category ? 'expanded' : 'collapsed'}
          >
            <motion.button
              onClick={() =>
                setExpandedCategory(
                  expandedCategory === category ? null : category
                )
              }
              className={`w-full text-left p-4 flex items-center justify-between
                    rounded-lg transition-colors duration-300
                    ${
                      expandedCategory === category
                        ? 'bg-purple-800/50 text-yellow-300'
                        : 'bg-purple-900/30 text-white hover:bg-purple-800/40'
                    }`}
            >
              <span className='font-semibold'>{category}</span>
              <motion.div
                animate={{ rotate: expandedCategory === category ? 180 : 0 }}
                transition={{ duration: 0.3 }}
              >
                {expandedCategory === category ? <FiMinus /> : <FiPlus />}
              </motion.div>
            </motion.button>

            <AnimatePresence>
              {expandedCategory === category && (
                <motion.div
                  initial='collapsed'
                  animate='expanded'
                  exit='collapsed'
                  variants={categoryVariants}
                  transition={{ duration: 0.3 }}
                  className='px-4 py-2 bg-purple-900/20 backdrop-blur-sm'
                >
                  {categoryItems.map((item, itemIndex) => (
                    <motion.div
                      key={itemIndex}
                      initial={{ opacity: 0, x: -20 }}
                      animate={{ opacity: 1, x: 0 }}
                      transition={{ delay: itemIndex * 0.1 }}
                      className='flex items-start py-2'
                    >
                      {item.included ? (
                        <FiCheck className='text-green-400 mt-1 mr-3 flex-shrink-0 w-5 h-5' />
                      ) : (
                        <FiX className='text-red-400 mt-1 mr-3 flex-shrink-0 w-5 h-5' />
                      )}
                      <div>
                        <p
                          className={`font-medium ${
                            item.included ? 'text-white' : 'text-gray-400'
                          }`}
                        >
                          {item.title}
                        </p>
                        {item.description && (
                          <p
                            className={`text-sm ${
                              item.included ? 'text-gray-300' : 'text-gray-500'
                            }`}
                          >
                            {item.description}
                          </p>
                        )}
                      </div>
                    </motion.div>
                  ))}
                </motion.div>
              )}
            </AnimatePresence>
          </motion.div>
        ))}
      </div>

      <motion.div className='space-y-4' whileHover={{ scale: 1.02 }}>
        <Link
          to='/signin'
          className={`block w-full py-3 px-6 text-center rounded-lg font-semibold 
                transition-all duration-300 transform hover:scale-105 hover:shadow-lg
                ${
                  type === 'normal'
                    ? 'bg-yellow-400 hover:bg-yellow-500 text-purple-900'
                    : 'bg-purple-600 hover:bg-purple-700 text-white'
                }`}
        >
          Reservar Ahora
          <FiArrowRight className='inline ml-2' />
        </Link>

        <button
          onClick={() => (window.location.href = 'tel:+523332300243')}
          className='w-full py-3 px-6 text-center rounded-lg font-semibold 
                border-2 border-white/20 text-white hover:bg-white/10 
                transition-all duration-300 transform hover:scale-105 hover:shadow-lg'
        >
          Llamar para InformaciÃ³n
          <FiPhone className='inline ml-2' />
        </button>
      </motion.div>
    </motion.div>
  )
}

/**
 * Componente Appointment rediseÃ±ado para mantener consistencia con Home.jsx
 */
export default function Appointment () {
  // Referencias para elementos que necesitan animaciÃ³n
  const videoRef = useRef(null);
  const [isVideoPlaying, setIsVideoPlaying] = useState(true);
  
  // Efecto para inicializar el video de manera segura
  useEffect(() => {
    const initializeVideo = async () => {
      if (!videoRef.current) {
        console.warn("Video element not available on mount");
        return;
      }
      
      console.log("Initializing video element");
      
      try {
        // Forzar carga del video
        videoRef.current.load();
        
        // Verificar si el navegador permite autoplay
        const canAutoplay = await testAutoplayCapability();
        console.log("Autoplay capability:", canAutoplay);
        
        if (canAutoplay) {
          await videoRef.current.play();
          console.log("Video started playing automatically");
          setIsVideoPlaying(true);
        } else {
          console.log("Autoplay not supported - video paused");
          videoRef.current.pause();
          setIsVideoPlaying(false);
        }
      } catch (error) {
        console.error("Error initializing video:", error);
        setIsVideoPlaying(false);
      }
    };
    
    // FunciÃ³n para probar capacidad de autoplay
    const testAutoplayCapability = () => {
      return new Promise(resolve => {
        // Crear un video temporal para probar autoplay
        const testVideo = document.createElement('video');
        testVideo.muted = true;
        testVideo.playsInline = true;
        testVideo.src = "data:video/mp4;base64,AAAAIGZ0eXBtcDQyAAAAAG1wNDJtcDQxaXNvbWF2YzEAAATKbW9vdgAAAGxtdmhkAAAAANLEP5XSxD+VAAB1MAAAdU4AAQAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAACFpb2RzAAAAABCAgIAQAE////9//w6AgIAEAAAAAQAABDV0cmFrAAAAXHRraGQAAAAH0sQ/ldLEP5UAAAABAAAAAAAAdU4AAAAAAAAAAAAAAAABAQAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAABbG1kaWEAAAAgbWRoZAAAAADSxD+V0sQ/lQAAVcQAAK1lAAAAAAAAAABiaWRpAAAAAG1keGQAAAAAAAAAAAAAAAAAAD5tZGlhAAAAO21kYXQAAAAAAAEBIAACEAUQAA==";
        
        // Si el video puede reproducirse, entonces autoplay estÃ¡ permitido
        const playPromise = testVideo.play();
        if (playPromise !== undefined) {
          playPromise
            .then(() => resolve(true))
            .catch(() => resolve(false));
        } else {
          resolve(false);
        }
      });
    };
    
    // Inicializar con un pequeÃ±o retraso para asegurar que el DOM estÃ¡ listo
    const timer = setTimeout(() => {
      initializeVideo();
    }, 500);
    
    return () => clearTimeout(timer);
  }, []);
  
  // Efecto GSAP para elementos animados en scroll
  useLayoutEffect(() => {
    const ctx = gsap.context(() => {
      ScrollTrigger.batch('.animate-on-scroll', {
        onEnter: batch =>
          gsap.to(batch, {
            opacity: 1,
            y: 0,
            stagger: 0.15,
            overwrite: true
          }),
        start: 'top bottom-=100',
        end: 'bottom top',
        markers: false
      })
    })

    return () => ctx.revert()
  }, [])

  // FunciÃ³n toggleVideo simplificada y mejorada
  const toggleVideo = (e) => {
    if (e) {
      e.preventDefault();
      e.stopPropagation();
    }
    
    console.log("Toggle Video clicked with event:", e);
    console.log("Video ref exists:", !!videoRef.current);
    console.log("Current playing state:", isVideoPlaying);
    
    if (!videoRef.current) {
      console.error("No video reference available");
      return;
    }
    
    try {
      if (isVideoPlaying) {
        // Pausar video
        videoRef.current.pause();
        console.log("Video pause command sent");
        setIsVideoPlaying(false);
      } else {
        // Reproducir video - forma simplificada
        videoRef.current.play()
          .then(() => {
            console.log("Video play successful");
            setIsVideoPlaying(true);
          })
          .catch(err => {
            console.error("Error playing video:", err);
            
            // Solo agregar listener para interacciÃ³n de usuario si es necesario
            const handleUserInteraction = () => {
              videoRef.current.play()
                .then(() => {
                  setIsVideoPlaying(true);
                  document.removeEventListener('click', handleUserInteraction);
                  console.log("Video reproducido tras interacciÃ³n del usuario");
                })
                .catch(e => console.error("Fallo en reproducciÃ³n forzada:", e));
            };
            
            document.addEventListener('click', handleUserInteraction, { once: true });
          });
      }
    } catch (error) {
      console.error("Error al cambiar estado del video:", error);
    }
  };

  // DefiniciÃ³n de servicios
  const services = {
    normal: {
      title: 'Tramboory Normal',
      description:
        'La experiencia completa con todos los servicios incluidos para una celebraciÃ³n perfecta.',
      price: '7,999',
      recommended: true,
      type: 'normal',
      items: {
        'Tiempo y Espacio': [
          {
            title: '4 Horas de DiversiÃ³n',
            description: '3.5 horas de salÃ³n + 30 min de despedida',
            included: true
          }
        ],
        'DecoraciÃ³n y PersonalizaciÃ³n': [
          {
            title: 'InvitaciÃ³n Digital',
            description: 'InvitaciÃ³n personalizada para tu evento',
            included: true
          },
          {
            title: 'DecoraciÃ³n TemÃ¡tica',
            description: 'AmbientaciÃ³n Tramboory para tu fiesta',
            included: true
          }
        ],
        'Alimentos y Bebidas': [
          {
            title: 'MenÃº Completo',
            description: 'Alimentos para niÃ±os y adultos',
            included: true
          },
          {
            title: 'Bebidas Ilimitadas',
            description: 'Refrescos, agua y cafÃ© de cortesÃ­a',
            included: true
          }
        ],
        'Entretenimiento y Personal': [
          {
            title: 'Ãrea de Juegos',
            description: 'Ludoteca y alberca de pelotas',
            included: true
          },
          {
            title: 'Ambiente Festivo',
            description: 'MÃºsica y anfitriones para animar',
            included: true
          },
          {
            title: 'Coordinador de Evento',
            description: 'Personal dedicado para tu celebraciÃ³n',
            included: true
          }
        ]
      }
    },
    matutino: {
      title: 'Tramboory Matutino',
      description:
        'Renta del espacio para eventos personalizados con la opciÃ³n de agregar servicios adicionales.',
      price: '4,999',
      recommended: false,
      type: 'matutino',
      items: {
        'Renta BÃ¡sica': [
          {
            title: 'Espacio Exclusivo',
            description: 'SalÃ³n privado para tu evento',
            included: true
          },
          {
            title: 'Mobiliario BÃ¡sico',
            description: 'Mesas y sillas incluidas',
            included: true
          },
          {
            title: 'Horario Matutino',
            description: '3 horas de evento',
            included: true
          }
        ],
        'Servicios Opcionales': [
          {
            title: 'Servicio de Alimentos',
            description: 'Personaliza el menÃº a tu gusto',
            included: false
          },
          {
            title: 'DecoraciÃ³n',
            description: 'OpciÃ³n de decorar el espacio',
            included: false
          },
          {
            title: 'Personal de Servicio',
            description: 'Meseros y personal de apoyo opcional',
            included: false
          }
        ]
      }
    }
  }

  return (
    <div className="relative min-h-screen overflow-hidden bg-gradient-to-br from-purple-950 to-indigo-950">
      {/* Primero los elementos decorativos de fondo */}
      <ParticlesBackground />
      <AnimatedBalloons />
      
      {/* Video de Fondo - AsegÃºrate de que estÃ© antes de otros elementos de contenido */}
      <BackgroundVideoComponent
        videoRef={videoRef}
        isVideoPlaying={isVideoPlaying}
        toggleVideo={toggleVideo}
      />

      {/* Contenido principal con mayor z-index para estar por encima del video */}
      <div className="relative z-10 pointer-events-none">
        {/* Navbar pÃºblico */}
        <div className="pointer-events-auto">
          <NavbarPublic />
        </div>

        {/* Hero Section */}
        <section className="relative pt-32 pb-20 px-4 sm:px-6 lg:px-8 animate-on-scroll pointer-events-auto">
          <div className="max-w-7xl mx-auto text-center">
            <motion.h1
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              className="text-5xl md:text-6xl font-extrabold text-white mb-8 font-funhouse"
            >
              Elige tu Experiencia
              <span className="block text-gradient bg-clip-text text-transparent bg-gradient-to-r from-yellow-300 to-yellow-500">Tramboory</span>
            </motion.h1>
            <motion.p
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.2 }}
              className="text-xl text-gray-300 max-w-3xl mx-auto mb-10"
            >
              Dos opciones perfectas para tu celebraciÃ³n: nuestro paquete todo
              incluido o personaliza tu evento a tu manera en horario matutino.
            </motion.p>
          </div>
        </section>

        {/* Services Section */}
        <section className="py-12 px-4 sm:px-6 lg:px-8 pointer-events-auto">
          <div className="max-w-7xl mx-auto">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              <ServiceCard {...services.normal} />
              <ServiceCard {...services.matutino} />
            </div>
          </div>
        </section>

        {/* Contact Section */}
        <section className="py-16 px-4 sm:px-6 lg:px-8 relative overflow-hidden pointer-events-auto">
          <div className="absolute inset-0 bg-gradient-to-r from-purple-800/90 to-indigo-800/90 backdrop-blur-sm" />
          <div className="max-w-7xl mx-auto relative z-10 text-center">
            <h2 className="text-3xl font-bold text-white mb-6 font-funhouse">
              Â¿Tienes dudas sobre nuestros servicios?
            </h2>
            <p className="text-white/90 text-lg mb-8">
              Nuestro equipo estÃ¡ listo para ayudarte a elegir la mejor opciÃ³n
              para tu evento
            </p>
            <div className="flex flex-col sm:flex-row justify-center gap-4">
              <button
                onClick={() => {
                  window.open("https://wa.me/523332300243?text=Hola%2C%20me%20gustar%C3%ADa%20obtener%20m%C3%A1s%20informaci%C3%B3n%20sobre%20sus%20servicios%20para%20fiestas%20infantiles.", '_blank', 'noopener,noreferrer');
                }}
                className="inline-flex items-center justify-center px-6 py-3 rounded-lg 
                        bg-white text-purple-900 font-semibold hover:bg-gray-100 
                        transition-all duration-300 transform hover:scale-105"
              >
                <FiMessageSquare className="mr-2" />
                ContÃ¡ctanos
              </button>
              <button
                onClick={() => (window.location.href = 'tel:+523332300243')}
                className="inline-flex items-center justify-center px-6 py-3 rounded-lg 
                        border-2 border-white text-white font-semibold hover:bg-white/10 
                        transition-all duration-300 transform hover:scale-105"
              >
                <FiPhone className="mr-2" />
                Llamar Ahora
              </button>
            </div>
          </div>
        </section>
      </div>
    </div>
  )
}\n\n

=== ./public/pages/Home.jsx ===
import React, { useState, useEffect, useRef } from 'react'
import { gsap } from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger'
import 'react-responsive-carousel/lib/styles/carousel.min.css'
import { getImagenesCarousel, getPromocionesCarousel } from '@domains/galeria/services/galeriaService'
import NavbarPublic from '@shared/components/NavbarPublic'

// Componentes decorativos
import ParticlesBackground from './home-components/decorative/ParticlesBackground'
import AnimatedBalloons from './home-components/decorative/AnimatedBalloons'
import BackgroundVideoComponent from './home-components/decorative/BackgroundVideoComponent'

// Secciones de la pÃ¡gina
import HeroSection from './home-components/sections/HeroSection'
import PromotionsSection from './home-components/sections/PromotionsSection'
import ReservationStepsSection from './home-components/sections/ReservationStepsSection'
import ServicesSection from './home-components/sections/ServicesSection'
import FeaturesSection from './home-components/sections/FeaturesSection'
import GallerySection from './home-components/sections/GallerySection'
import ContactSection from './home-components/sections/ContactSection'
import FooterSection from './home-components/sections/FooterSection'

// Registrar GSAP ScrollTrigger
gsap.registerPlugin(ScrollTrigger)

/**
 * Componente principal de la pÃ¡gina de inicio
 * Modularizado para mejor mantenimiento y organizaciÃ³n
 */
const Home = () => {
  // Estados
  const [isVideoPlaying, setIsVideoPlaying] = useState(true);
  const [carouselImages, setCarouselImages] = useState([]);
  const [promocionesImages, setPromocionesImages] = useState([]);
  const [isLoadingImages, setIsLoadingImages] = useState(true);
  const [isLoadingPromociones, setIsLoadingPromociones] = useState(true);
  
  // Referencias
  const sectionRefs = {
    hero: useRef(null),
    content: useRef(null),
    video: useRef(null)
  };

  // Datos para servicios
  const services = {
    normal: {
      title: 'Tramboory Normal',
      description: 'La experiencia completa con todos los servicios incluidos para una celebraciÃ³n perfecta',
      price: '7,999',
      features: [
        {
          title: '4 Horas de DiversiÃ³n',
          description: '3.5 horas de salÃ³n + 30 min de despedida',
          icon: FiClock
        },
        {
          title: 'InvitaciÃ³n Digital',
          description: 'InvitaciÃ³n personalizada para tu evento',
          icon: FiMail
        },
        {
          title: 'DecoraciÃ³n TemÃ¡tica',
          description: 'AmbientaciÃ³n Tramboory para tu fiesta',
          icon: FiGift
        },
        {
          title: 'MenÃº Completo',
          description: 'Alimentos para niÃ±os y adultos',
          icon: FiCoffee
        },
        {
          title: 'Bebidas Ilimitadas',
          description: 'Refrescos, agua y cafÃ© de cortesÃ­a',
          icon: FiCoffee
        },
        {
          title: 'Ãrea de Juegos',
          description: 'Ludoteca y alberca de pelotas',
          icon: FiSmile
        },
        {
          title: 'Ambiente Festivo',
          description: 'MÃºsica y anfitriones para animar',
          icon: FiMusic
        },
        {
          title: 'Coordinador de Evento',
          description: 'Personal dedicado para tu celebraciÃ³n',
          icon: FiUsers
        }
      ],
      highlights: ['Todo Incluido', 'Personal Completo', 'Sin Preocupaciones'],
      recommended: true
    },
    matutino: {
      title: 'Tramboory Matutino',
      description: 'Renta del espacio para eventos personalizados con servicios opcionales',
      price: '4,999',
      features: [
        {
          title: '3 Horas de Evento',
          description: 'Horario matutino flexible',
          icon: FiClock
        },
        {
          title: 'Espacio Exclusivo',
          description: 'SalÃ³n privado para tu evento',
          icon: FiMapPin
        },
        {
          title: 'Mobiliario BÃ¡sico',
          description: 'Mesas y sillas incluidas',
          icon: FiPackage
        },
        {
          title: 'Servicios Opcionales',
          description: 'Personaliza tu experiencia',
          icon: FiStar
        }
      ],
      highlights: ['Personalizable', 'EconÃ³mico', 'Flexible'],
      recommended: false
    }
  };

  // Cargar imÃ¡genes del carrusel y promociones desde la API
  useEffect(() => {
    // FunciÃ³n para cargar imÃ¡genes del carrusel
    const loadImages = async () => {
      try {
        setIsLoadingImages(true);
        const imagenes = await getImagenesCarousel();
        
        // Ordenar por el campo orden y obtener solo las URLs de las imÃ¡genes activas
        const imageUrls = imagenes
          .filter(img => img.activo)
          .sort((a, b) => a.orden - b.orden)
          .map(img => img.imagen_url);
        
        // Usar solo las imÃ¡genes de la base de datos
        setCarouselImages(imageUrls);
      } catch (error) {
        console.error('Error cargando imÃ¡genes del carrusel:', error);
        // En caso de error, establecer un array vacÃ­o
        setCarouselImages([]);
      } finally {
        setIsLoadingImages(false);
      }
    };
    
    // FunciÃ³n para cargar promociones del mes
    const loadPromociones = async () => {
      try {
        setIsLoadingPromociones(true);
        const promociones = await getPromocionesCarousel();
        
        // Ordenar por el campo orden y obtener solo las URLs de las promociones activas
        const promoUrls = promociones
          .filter(promo => promo.activo)
          .sort((a, b) => a.orden - b.orden)
          .map(promo => promo.imagen_url);
        
        setPromocionesImages(promoUrls);
      } catch (error) {
        console.error('Error cargando promociones del mes:', error);
        setPromocionesImages([]);
      } finally {
        setIsLoadingPromociones(false);
      }
    };
    
    loadImages();
    loadPromociones();
  }, []);
  
  // Efectos para animaciones
  useEffect(() => {
    let ctx = gsap.context(() => {
      // Parallax effect para el hÃ©roe
      if (sectionRefs.content.current && sectionRefs.hero.current) {
        gsap.to(sectionRefs.content.current, {
          yPercent: 30,
          ease: 'none',
          scrollTrigger: {
            trigger: sectionRefs.hero.current,
            start: 'top top',
            end: 'bottom top',
            scrub: true
          }
        });
      }

      // Animaciones para las caracterÃ­sticas
      ScrollTrigger.batch('.feature-card', {
        onEnter: batch => gsap.to(batch, {
          opacity: 1,
          y: 0,
          stagger: 0.15,
          overwrite: true
        }),
        start: 'top bottom-=100',
        end: 'bottom top+=100',
        markers: false
      });
    });

    return () => {
      ScrollTrigger.getAll().forEach(trigger => trigger.kill());
      ctx.revert();
    };
  }, []);

  // FunciÃ³n toggleVideo mejorada
  const toggleVideo = (e) => {
    if (e) {
      e.preventDefault();
      e.stopPropagation();
    }
    
    console.log("Toggle Video clicked in Home:", !!sectionRefs.video.current);
    
    if (!sectionRefs.video.current) {
      console.error("No video reference available");
      return;
    }
    
    try {
      if (isVideoPlaying) {
        // Pausar video
        sectionRefs.video.current.pause();
        console.log("Video pausado en Home.jsx");
        setIsVideoPlaying(false);
      } else {
        // Reproducir video - forma simplificada
        sectionRefs.video.current.play()
          .then(() => {
            console.log("Video reproducido exitosamente en Home.jsx");
            setIsVideoPlaying(true);
          })
          .catch(err => {
            console.error("Error reproduciendo video en Home.jsx:", err);
            
            // Solo agregar listener para interacciÃ³n de usuario si es necesario
            const handleUserInteraction = () => {
              sectionRefs.video.current.play()
                .then(() => {
                  setIsVideoPlaying(true);
                  document.removeEventListener('click', handleUserInteraction);
                  console.log("Video reproducido tras interacciÃ³n del usuario");
                })
                .catch(e => console.error("Fallo en reproducciÃ³n forzada:", e));
            };
            
            document.addEventListener('click', handleUserInteraction, { once: true });
          });
      }
    } catch (error) {
      console.error("Error al cambiar estado del video:", error);
    }
  };

  // JSX principal
  return (
    <div className="relative min-h-screen overflow-hidden bg-gradient-to-br from-purple-950 to-indigo-950">
      {/* Elementos decorativos de fondo */}
      <ParticlesBackground />
      <AnimatedBalloons />
      
      {/* Video de Fondo */}
      <BackgroundVideoComponent
        videoRef={sectionRefs.video}
        isVideoPlaying={isVideoPlaying}
        toggleVideo={toggleVideo}
      />

      {/* Navbar pÃºblico */}
      <NavbarPublic />

      {/* Secciones principales */}
      <HeroSection sectionRefs={sectionRefs} />
      <PromotionsSection promocionesImages={promocionesImages} />
      <ReservationStepsSection />
      <ServicesSection services={services} />
      <FeaturesSection />
      <GallerySection carouselImages={carouselImages} />
      <ContactSection />
      <FooterSection />
    </div>
  );
};

// ImportaciÃ³n faltante para iconos usados en los servicios
import { 
  FiClock, 
  FiMail, 
  FiGift, 
  FiCoffee, 
  FiSmile, 
  FiMusic, 
  FiUsers, 
  FiMapPin, 
  FiPackage, 
  FiStar 
} from 'react-icons/fi';

export default Home;\n\n

=== ./public/pages/PublicHomeContainer.jsx ===
import React from 'react';
import Home from './Home'; // Importa el componente real de la pÃ¡gina de inicio

/**
 * Componente contenedor para la pÃ¡gina principal que agrega la clase home-public
 * Esta clase se usa para excluir la pÃ¡gina principal de los cambios de tema en modo oscuro
 */
const PublicHomeContainer = (props) => {
  return (
    <div className="home-public">
      <Home {...props} />
    </div>
  );
};

export default PublicHomeContainer; \n\n

=== ./public/pages/index.js ===
// Exportar todos los componentes de public/pages
export { default as AboutTramboory } from './AboutTramboory';
export { default as Appointment } from './Appointment';
export { default as Home } from './Home';
export { default as PublicHomeContainer } from './PublicHomeContainer';
// Agrega cualquier otra pÃ¡gina pÃºblica que tengas\n\n

=== ./public/pages/publico.txt ===
import React, { useState, useEffect, useRef } from 'react'
import { motion } from 'framer-motion'
import { 
  FiInfo, 
  FiUsers, 
  FiHeart, 
  FiSmile, 
  FiStar, 
  FiCalendar, 
  FiMapPin, 
  FiMessageCircle,
  FiCamera,
  FiArrowRight
} from 'react-icons/fi'
import CloudinaryCarousel from '@shared/components/cloudinary/CloudinaryCarousel'
import { getImagenesCarousel } from '@domains/galeria/services/galeriaService'
import NavbarPublic from '@shared/components/NavbarPublic'

// Componentes decorativos
import ParticlesBackground from './home-components/decorative/ParticlesBackground'
import AnimatedBalloons from './home-components/decorative/AnimatedBalloons'
import BackgroundVideoComponent from './home-components/decorative/BackgroundVideoComponent'

/**
 * PÃ¡gina Acerca de Tramboory - rediseÃ±ada para mantener consistencia con Home.jsx
 */
const AboutTramboory = () => {
  // Referencias para elementos que necesitan animaciÃ³n
  const videoRef = useRef(null);
  const [isVideoPlaying, setIsVideoPlaying] = useState(true);
  
  // Toggle para el video de fondo
  const toggleVideo = () => {
    if (videoRef.current) {
      if (isVideoPlaying) {
        videoRef.current.pause();
      } else {
        videoRef.current.play();
      }
      setIsVideoPlaying(!isVideoPlaying);
    }
  };
  const [carouselImages, setCarouselImages] = useState([])
  const [isLoadingImages, setIsLoadingImages] = useState(true)

  // Cargar imÃ¡genes del carrusel desde la API
  useEffect(() => {
    const loadImages = async () => {
      try {
        setIsLoadingImages(true)
        const imagenes = await getImagenesCarousel()
        
        // Ordenar por el campo orden y obtener solo las URLs de las imÃ¡genes activas
        const imageUrls = imagenes
          .filter(img => img.activo)
          .sort((a, b) => a.orden - b.orden)
          .map(img => img.imagen_url)
        
        // Si no hay imÃ¡genes en la base de datos, usar imÃ¡genes de ejemplo
        if (imageUrls.length === 0) {
          setCarouselImages([
            'samples/landscapes/nature-mountains',
            'samples/landscapes/beach-boat',
            'samples/landscapes/girl-urban-view',
            'samples/food/dessert',
            'samples/people/bicycle'
          ])
        } else {
          setCarouselImages(imageUrls)
        }
      } catch (error) {
        console.error('Error cargando imÃ¡genes del carrusel:', error)
        // En caso de error, usar imÃ¡genes de ejemplo
        setCarouselImages([
          'samples/landscapes/nature-mountains',
          'samples/landscapes/beach-boat',
          'samples/landscapes/girl-urban-view',
          'samples/landscapes/architecture-signs'
        ])
      } finally {
        setIsLoadingImages(false)
      }
    }
    
    loadImages()
  }, [])

  // Componente FeatureCard para destacar caracterÃ­sticas de Tramboory
  const FeatureCard = ({ feature, index }) => {
    const cardVariants = {
      hidden: { opacity: 0, y: 50 },
      visible: {
        opacity: 1,
        y: 0,
        transition: {
          type: "spring",
          duration: 0.6,
          delay: index * 0.1
        }
      },
      hover: {
        y: -10,
        transition: {
          type: "spring",
          stiffness: 300,
          damping: 20
        }
      }
    }

    const gradients = {
      green: 'from-green-400 to-green-600',
      yellow: 'from-yellow-400 to-yellow-600',
      pink: 'from-pink-400 to-pink-600',
      blue: 'from-blue-400 to-blue-600',
      purple: 'from-purple-400 to-purple-600',
      red: 'from-red-400 to-red-600'
    }

    return (
      <motion.div
        variants={cardVariants}
        initial="hidden"
        whileInView="visible"
        whileHover="hover"
        viewport={{ once: true }}
        className="feature-card p-8 rounded-xl bg-white/10 backdrop-blur-lg
          border border-white/20 hover:border-white/40 hover:shadow-xl 
          transition-all duration-300"
      >
        <div
          className={`w-16 h-16 rounded-full mb-6 flex items-center justify-center
          bg-gradient-to-r ${gradients[feature.color] || gradients.blue}`}
        >
          <feature.icon className="text-2xl text-white" />
        </div>
        <h3 className="text-2xl font-bold text-white mb-4 font-funhouse">{feature.title}</h3>
        <p className="text-gray-300">{feature.description}</p>
      </motion.div>
    )
  }

  // Datos - CaracterÃ­sticas principales de Tramboory
  const features = [
    {
      icon: FiHeart,
      title: 'Nuestro CorazÃ³n',
      description: 'En Tramboory creemos en crear momentos inolvidables para las familias, ofreciendo un espacio donde la diversiÃ³n y la magia se encuentran.',
      color: 'pink'
    },
    {
      icon: FiUsers,
      title: 'Equipo Apasionado',
      description: 'Nuestro equipo estÃ¡ dedicado a hacer de cada evento una experiencia perfecta, cuidando hasta el mÃ¡s mÃ­nimo detalle.',
      color: 'purple'
    },
    {
      icon: FiStar,
      title: 'Experiencia Premium',
      description: 'Ofrecemos un servicio de primera calidad, con instalaciones modernas y seguras para que todos disfruten sin preocupaciones.',
      color: 'yellow'
    },
    {
      icon: FiCalendar,
      title: 'Historia y Trayectoria',
      description: 'Desde nuestra fundaciÃ³n, hemos sido parte de miles de celebraciones, creciendo y mejorando constantemente.',
      color: 'blue'
    },
    {
      icon: FiSmile,
      title: 'DiversiÃ³n Garantizada',
      description: 'DiseÃ±amos cada actividad y espacio para asegurar que todos los asistentes, grandes y pequeÃ±os, disfruten al mÃ¡ximo.',
      color: 'green'
    },
    {
      icon: FiMapPin,
      title: 'UbicaciÃ³n EstratÃ©gica',
      description: 'Nos encontramos en una zona accesible de Zapopan, con estacionamiento y todas las facilidades para tu comodidad.',
      color: 'red'
    }
  ]

  // Datos de historia de Tramboory
  const historyMilestones = [
    {
      year: '2018',
      title: 'Nace una Idea',
      description: 'Tramboory surge como un sueÃ±o de crear un espacio Ãºnico para celebraciones infantiles en Guadalajara.'
    },
    {
      year: '2019',
      title: 'Abrimos Nuestras Puertas',
      description: 'Inauguramos nuestras instalaciones en Zapopan, con una gran fiesta de apertura que marcÃ³ el inicio de nuestra historia.'
    },
    {
      year: '2020',
      title: 'Superando DesafÃ­os',
      description: 'A pesar de los retos globales, nos reinventamos para seguir ofreciendo experiencias seguras y memorables.'
    },
    {
      year: '2021',
      title: 'Crecimiento y ExpansiÃ³n',
      description: 'Ampliamos nuestros servicios y mejoramos nuestras instalaciones para ofrecer mÃ¡s opciones a nuestros clientes.'
    },
    {
      year: '2022',
      title: 'InnovaciÃ³n Constante',
      description: 'Implementamos nuevas tecnologÃ­as y temas de decoraciÃ³n para mantenernos a la vanguardia.'
    },
    {
      year: '2023',
      title: 'Comunidad Tramboory',
      description: 'Celebramos haber sido parte de mÃ¡s de 1,000 eventos y construido una comunidad fiel de familias que confÃ­an en nosotros.'
    }
  ]

  return (
    <div className="relative min-h-screen overflow-hidden bg-gradient-to-br from-purple-950 to-indigo-950">
      {/* Elementos decorativos de fondo */}
      <ParticlesBackground />
      <AnimatedBalloons />
      
      {/* Video de Fondo */}
      <BackgroundVideoComponent
        videoRef={videoRef}
        isVideoPlaying={isVideoPlaying}
        toggleVideo={toggleVideo}
      />

      {/* Navbar pÃºblico */}
      <NavbarPublic />
      
      {/* SecciÃ³n Hero */}
      <section className="relative pt-32 pb-16 bg-gradient-to-b from-black/40 to-transparent">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center mb-12"
          >
            <h1 className="text-5xl md:text-6xl font-bold text-white mb-6 font-funhouse">
              Conoce{' '}
              <span className="text-gradient bg-clip-text text-transparent bg-gradient-to-r from-yellow-300 to-pink-500">
                Tramboory
              </span>
            </h1>
            <p className="text-xl md:text-2xl text-gray-200 max-w-3xl mx-auto">
              Un espacio mÃ¡gico donde los sueÃ±os se convierten en celebraciones inolvidables
            </p>
          </motion.div>

          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            className="mb-16"
          >
            <CloudinaryCarousel 
              height="500px"
              autoPlaySpeed={3000}
              imageWidth={1.8}
              images={carouselImages}
            />
          </motion.div>
        </div>
        
        {/* Decorative Elements */}
        <div className="absolute top-0 inset-x-0 h-64 bg-gradient-to-b from-black/50 to-transparent pointer-events-none" />
        <div className="absolute bottom-0 inset-x-0 h-64 bg-gradient-to-t from-purple-900/50 to-transparent pointer-events-none" />
      </section>

      {/* SecciÃ³n QuiÃ©nes Somos */}
      <section className="relative py-20 bg-gradient-to-b from-purple-900/90 to-indigo-900/90">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-6 font-funhouse">
              Â¿QuiÃ©nes Somos?
            </h2>
            <p className="text-xl text-gray-300 max-w-3xl mx-auto">
              En Tramboory somos especialistas en crear momentos llenos de alegrÃ­a y diversiÃ³n para toda la familia
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-5xl mx-auto">
            <motion.div
              initial={{ opacity: 0, x: -30 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              className="bg-white/10 backdrop-blur-lg p-8 rounded-2xl border border-white/20"
            >
              <div className="flex items-center mb-6">
                <FiInfo className="text-3xl text-yellow-400 mr-4" />
                <h3 className="text-2xl font-bold text-white font-funhouse">Nuestra MisiÃ³n</h3>
              </div>
              <p className="text-gray-300 mb-4">
                Crear experiencias mÃ¡gicas y memorables para las familias, ofreciendo un espacio seguro y divertido donde los niÃ±os puedan celebrar momentos especiales y los adultos puedan disfrutar sin preocupaciones.
              </p>
              <p className="text-gray-300">
                Nos dedicamos a transformar cada evento en una celebraciÃ³n Ãºnica, adaptada a los gustos y necesidades de cada cliente, con atenciÃ³n personalizada y servicio de excelencia.
              </p>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, x: 30 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              className="bg-white/10 backdrop-blur-lg p-8 rounded-2xl border border-white/20"
            >
              <div className="flex items-center mb-6">
                <FiStar className="text-3xl text-yellow-400 mr-4" />
                <h3 className="text-2xl font-bold text-white font-funhouse">Nuestra VisiÃ³n</h3>
              </div>
              <p className="text-gray-300 mb-4">
                Ser reconocidos como el lugar preferido para celebraciones infantiles en Guadalajara, innovando constantemente en nuestros servicios y creando tendencias en el mercado.
              </p>
              <p className="text-gray-300">
                Buscamos expandir nuestra presencia y llevar la magia de Tramboory a mÃ¡s familias, manteniendo siempre nuestros valores de excelencia, creatividad y pasiÃ³n por lo que hacemos.
              </p>
            </motion.div>
          </div>
        </div>
      </section>

      {/* SecciÃ³n CaracterÃ­sticas */}
      <section className="relative py-20 bg-gradient-to-b from-indigo-900/90 to-purple-900/90">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-6 font-funhouse">
              Â¿Por quÃ© Tramboory?
            </h2>
            <p className="text-xl text-gray-300 max-w-3xl mx-auto">
              Descubre lo que nos hace especiales y por quÃ© tantas familias confÃ­an en nosotros
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto">
            {features.map((feature, index) => (
              <FeatureCard key={index} feature={feature} index={index} />
            ))}
          </div>
        </div>
      </section>

      {/* SecciÃ³n Historia */}
      <section className="relative py-20 bg-gradient-to-b from-purple-900/90 to-black/90">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-6 font-funhouse">
              Nuestra Historia
            </h2>
            <p className="text-xl text-gray-300 max-w-3xl mx-auto">
              El camino que hemos recorrido para convertirnos en el espacio mÃ¡gico que somos hoy
            </p>
          </motion.div>

          <div className="relative max-w-4xl mx-auto">
            {/* LÃ­nea de tiempo vertical */}
            <div className="absolute left-1/2 top-0 bottom-0 w-1 bg-gradient-to-b from-yellow-400 to-pink-500 transform -translate-x-1/2"></div>
            
            {historyMilestones.map((milestone, index) => (
              <motion.div 
                key={index}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true, margin: "-100px" }}
                transition={{ delay: index * 0.1 }}
                className={`relative mb-16 flex ${
                  index % 2 === 0 ? "flex-row" : "flex-row-reverse"
                }`}
              >
                {/* CÃ­rculo en la lÃ­nea de tiempo */}
                <div className="absolute left-1/2 top-0 w-8 h-8 bg-gradient-to-r from-yellow-400 to-pink-500 rounded-full transform -translate-x-1/2 z-10 border-4 border-purple-900"></div>
                
                {/* Contenedor del contenido */}
                <div className={`w-5/12 ${index % 2 === 0 ? "pr-8 text-right" : "pl-8 text-left"}`}>
                  <div className="bg-white/10 backdrop-blur-lg p-6 rounded-xl border border-white/20 hover:border-white/40 transition-all duration-300 hover:shadow-xl">
                    <div className="inline-block px-4 py-2 bg-gradient-to-r from-yellow-400 to-pink-500 text-purple-900 font-bold rounded-full mb-4">
                      {milestone.year}
                    </div>
                    <h3 className="text-xl font-bold text-white mb-3 font-funhouse">{milestone.title}</h3>
                    <p className="text-gray-300">{milestone.description}</p>
                  </div>
                </div>
                
                {/* Espacio para el lado opuesto */}
                <div className="w-5/12"></div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* SecciÃ³n CTA */}
      <section className="relative py-16 bg-gradient-to-b from-black/90 to-purple-900/90">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            whileInView={{ opacity: 1, scale: 1 }}
            viewport={{ once: true }}
            className="max-w-4xl mx-auto bg-gradient-to-r from-purple-800/80 to-indigo-800/80 p-10 rounded-2xl border border-white/10 text-center backdrop-blur-lg"
          >
            <h2 className="text-3xl md:text-4xl font-bold text-white mb-6 font-funhouse">
              Â¡Vive la Experiencia Tramboory!
            </h2>
            <p className="text-xl text-gray-200 mb-10">
              Estamos listos para hacer de tu prÃ³xima celebraciÃ³n un momento inolvidable
            </p>
            <div className="flex flex-col sm:flex-row items-center justify-center gap-6">
              <motion.button
                onClick={() => {
                  window.open("https://wa.me/523332300243?text=Hola%2C%20me%20gustar%C3%ADa%20obtener%20m%C3%A1s%20informaci%C3%B3n%20sobre%20sus%20servicios%20para%20fiestas%20infantiles.", '_blank', 'noopener,noreferrer');
                }}
                whileHover={{ scale: 1.1, rotate: 5 }}
                whileTap={{ scale: 0.95 }}
                className="inline-flex items-center justify-center space-x-2 py-3 px-6
                  bg-green-500 text-white rounded-lg font-bold hover:bg-green-600
                  transition-colors duration-300 shadow-lg cursor-pointer"
                aria-label="Contactar por WhatsApp"
              >
                <FiMessageCircle className="text-xl" />
                <span>Contactar por WhatsApp</span>
              </motion.button>
              
              <motion.a
                href="/appointments"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="px-8 py-3 bg-gradient-to-r from-yellow-400 to-yellow-500
                  text-purple-900 rounded-lg font-bold text-lg shadow-xl
                  hover:from-yellow-500 hover:to-yellow-600 transition-all duration-300 flex items-center"
              >
                <span>Reservar Ahora</span>
                <FiArrowRight className="ml-2" />
              </motion.a>
            </div>
          </motion.div>
        </div>
      </section>

      {/* SecciÃ³n GalerÃ­a al final */}
      <section className="relative py-20 bg-gradient-to-b from-purple-900/90 to-black/90">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-6 font-funhouse">
              Momentos MÃ¡gicos
            </h2>
            <p className="text-xl text-gray-300 max-w-3xl mx-auto">
              Algunos recuerdos de las celebraciones especiales en nuestras instalaciones
            </p>
          </motion.div>

          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            viewport={{ once: true }}
            className="mb-16"
          >
            <CloudinaryCarousel 
              height="450px"
              autoPlaySpeed={2500}
              imageWidth={1.6}
              images={carouselImages}
            />
          </motion.div>

          <div className="flex justify-center">
            <motion.a
              href="https://www.instagram.com/tramboory/"
              target="_blank"
              rel="noopener noreferrer"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="flex items-center px-8 py-4 bg-white/10 backdrop-blur-sm text-white 
                rounded-full font-bold text-lg border-2 border-yellow-400/30 hover:bg-white/20
                transition-all duration-300"
            >
              <FiCamera className="mr-2" />
              Ver mÃ¡s en Instagram
            </motion.a>
          </div>
        </div>
        
        {/* Decorative Elements */}
        <div className="absolute top-0 inset-x-0 h-64 bg-gradient-to-b from-purple-900/20 to-transparent pointer-events-none" />
        <div className="absolute bottom-0 inset-x-0 h-64 bg-gradient-to-t from-black/20 to-transparent pointer-events-none" />
      </section>
    </div>
  )
}

export default AboutTrambooryimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react'
import { Link } from 'react-router-dom'
import { motion, AnimatePresence } from 'framer-motion'
import { gsap } from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger'
import NavbarPublic from '@shared/components/NavbarPublic'
import {
  FiClock,
  FiImage,
  FiCoffee,
  FiMusic,
  FiUsers,
  FiArrowRight,
  FiCheck,
  FiX,
  FiPhone,
  FiMessageSquare,
  FiPlus,
  FiMinus,
  FiPlay,
  FiPause
} from 'react-icons/fi'

// Componentes decorativos
import ParticlesBackground from './home-components/decorative/ParticlesBackground'
import AnimatedBalloons from './home-components/decorative/AnimatedBalloons'
import BackgroundVideoComponent from './home-components/decorative/BackgroundVideoComponent'

gsap.registerPlugin(ScrollTrigger)

/**
 * Componente de tarjeta de servicio para mostrar los paquetes 
 * disponibles con animaciones y detalles expandibles
 */
const ServiceCard = ({
  title,
  description,
  items,
  price,
  recommended,
  type
}) => {
  const [expandedCategory, setExpandedCategory] = useState(null)
  const [isHovered, setIsHovered] = useState(false)

  const cardVariants = {
    hover: {
      scale: 1.02,
      y: -5,
      transition: {
        type: 'spring',
        stiffness: 300,
        damping: 20
      }
    }
  }

  const categoryVariants = {
    collapsed: { height: 0, opacity: 0 },
    expanded: { height: 'auto', opacity: 1 }
  }

  return (
    <motion.div
      variants={cardVariants}
      whileHover='hover'
      onHoverStart={() => setIsHovered(true)}
      onHoverEnd={() => setIsHovered(false)}
      className={`bg-white/10 backdrop-blur-lg rounded-2xl shadow-xl p-8 relative cursor-pointer
            ${
              recommended
                ? 'border-4 border-yellow-400'
                : 'border border-white/20'
            }
            transform transition-all duration-300`}
    >
      {recommended && (
        <motion.div
          initial={{ scale: 0 }}
          animate={{ scale: 1 }}
          className='absolute -top-4 left-1/2 transform -translate-x-1/2'
        >
          <span className='bg-yellow-400 text-purple-900 px-6 py-2 rounded-full text-sm font-semibold shadow-lg'>
            Paquete Completo
          </span>
        </motion.div>
      )}

      {/* Efecto de brillo en hover */}
      <div
        className={`absolute inset-0 rounded-2xl transition-opacity duration-300 pointer-events-none
              ${isHovered ? 'opacity-100' : 'opacity-0'}
              bg-gradient-to-r from-transparent via-white/10 to-transparent
              animate-shine`}
      />

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className='mb-6'
      >
        <span
          className={`text-sm font-semibold ${
            type === 'normal' ? 'text-yellow-300' : 'text-purple-300'
          }`}
        >
          {type === 'normal' ? 'Todo Incluido' : 'Renta de Espacio'}
        </span>
        <h3 className='text-2xl font-bold text-white mt-2'>{title}</h3>
        <p className='text-gray-300 mt-2'>{description}</p>

        <div className='mt-4 text-3xl font-bold text-white'>
          ${price}
          <span className='text-base font-normal text-gray-400'>/evento</span>
        </div>
      </motion.div>

      <div className='space-y-4 mb-8'>
        {Object.entries(items).map(([category, categoryItems], index) => (
          <motion.div
            key={category}
            className='rounded-lg overflow-hidden'
            initial={false}
            animate={expandedCategory === category ? 'expanded' : 'collapsed'}
          >
            <motion.button
              onClick={() =>
                setExpandedCategory(
                  expandedCategory === category ? null : category
                )
              }
              className={`w-full text-left p-4 flex items-center justify-between
                    rounded-lg transition-colors duration-300
                    ${
                      expandedCategory === category
                        ? 'bg-purple-800/50 text-yellow-300'
                        : 'bg-purple-900/30 text-white hover:bg-purple-800/40'
                    }`}
            >
              <span className='font-semibold'>{category}</span>
              <motion.div
                animate={{ rotate: expandedCategory === category ? 180 : 0 }}
                transition={{ duration: 0.3 }}
              >
                {expandedCategory === category ? <FiMinus /> : <FiPlus />}
              </motion.div>
            </motion.button>

            <AnimatePresence>
              {expandedCategory === category && (
                <motion.div
                  initial='collapsed'
                  animate='expanded'
                  exit='collapsed'
                  variants={categoryVariants}
                  transition={{ duration: 0.3 }}
                  className='px-4 py-2 bg-purple-900/20 backdrop-blur-sm'
                >
                  {categoryItems.map((item, itemIndex) => (
                    <motion.div
                      key={itemIndex}
                      initial={{ opacity: 0, x: -20 }}
                      animate={{ opacity: 1, x: 0 }}
                      transition={{ delay: itemIndex * 0.1 }}
                      className='flex items-start py-2'
                    >
                      {item.included ? (
                        <FiCheck className='text-green-400 mt-1 mr-3 flex-shrink-0 w-5 h-5' />
                      ) : (
                        <FiX className='text-red-400 mt-1 mr-3 flex-shrink-0 w-5 h-5' />
                      )}
                      <div>
                        <p
                          className={`font-medium ${
                            item.included ? 'text-white' : 'text-gray-400'
                          }`}
                        >
                          {item.title}
                        </p>
                        {item.description && (
                          <p
                            className={`text-sm ${
                              item.included ? 'text-gray-300' : 'text-gray-500'
                            }`}
                          >
                            {item.description}
                          </p>
                        )}
                      </div>
                    </motion.div>
                  ))}
                </motion.div>
              )}
            </AnimatePresence>
          </motion.div>
        ))}
      </div>

      <motion.div className='space-y-4' whileHover={{ scale: 1.02 }}>
        <Link
          to='/signin'
          className={`block w-full py-3 px-6 text-center rounded-lg font-semibold 
                transition-all duration-300 transform hover:scale-105 hover:shadow-lg
                ${
                  type === 'normal'
                    ? 'bg-yellow-400 hover:bg-yellow-500 text-purple-900'
                    : 'bg-purple-600 hover:bg-purple-700 text-white'
                }`}
        >
          Reservar Ahora
          <FiArrowRight className='inline ml-2' />
        </Link>

        <button
          onClick={() => (window.location.href = 'tel:+523332300243')}
          className='w-full py-3 px-6 text-center rounded-lg font-semibold 
                border-2 border-white/20 text-white hover:bg-white/10 
                transition-all duration-300 transform hover:scale-105 hover:shadow-lg'
        >
          Llamar para InformaciÃ³n
          <FiPhone className='inline ml-2' />
        </button>
      </motion.div>
    </motion.div>
  )
}

/**
 * Componente Appointment rediseÃ±ado para mantener consistencia con Home.jsx
 */
export default function Appointment () {
  // Referencias para elementos que necesitan animaciÃ³n
  const videoRef = useRef(null);
  const [isVideoPlaying, setIsVideoPlaying] = useState(true);
  
  // Efecto para inicializar el video de manera segura
  useEffect(() => {
    const initializeVideo = async () => {
      if (!videoRef.current) {
        console.warn("Video element not available on mount");
        return;
      }
      
      console.log("Initializing video element");
      
      try {
        // Forzar carga del video
        videoRef.current.load();
        
        // Verificar si el navegador permite autoplay
        const canAutoplay = await testAutoplayCapability();
        console.log("Autoplay capability:", canAutoplay);
        
        if (canAutoplay) {
          await videoRef.current.play();
          console.log("Video started playing automatically");
          setIsVideoPlaying(true);
        } else {
          console.log("Autoplay not supported - video paused");
          videoRef.current.pause();
          setIsVideoPlaying(false);
        }
      } catch (error) {
        console.error("Error initializing video:", error);
        setIsVideoPlaying(false);
      }
    };
    
    // FunciÃ³n para probar capacidad de autoplay
    const testAutoplayCapability = () => {
      return new Promise(resolve => {
        // Crear un video temporal para probar autoplay
        const testVideo = document.createElement('video');
        testVideo.muted = true;
        testVideo.playsInline = true;
        testVideo.src = "data:video/mp4;base64,AAAAIGZ0eXBtcDQyAAAAAG1wNDJtcDQxaXNvbWF2YzEAAATKbW9vdgAAAGxtdmhkAAAAANLEP5XSxD+VAAB1MAAAdU4AAQAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAACFpb2RzAAAAABCAgIAQAE////9//w6AgIAEAAAAAQAABDV0cmFrAAAAXHRraGQAAAAH0sQ/ldLEP5UAAAABAAAAAAAAdU4AAAAAAAAAAAAAAAABAQAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAABbG1kaWEAAAAgbWRoZAAAAADSxD+V0sQ/lQAAVcQAAK1lAAAAAAAAAABiaWRpAAAAAG1keGQAAAAAAAAAAAAAAAAAAD5tZGlhAAAAO21kYXQAAAAAAAEBIAACEAUQAA==";
        
        // Si el video puede reproducirse, entonces autoplay estÃ¡ permitido
        const playPromise = testVideo.play();
        if (playPromise !== undefined) {
          playPromise
            .then(() => resolve(true))
            .catch(() => resolve(false));
        } else {
          resolve(false);
        }
      });
    };
    
    // Inicializar con un pequeÃ±o retraso para asegurar que el DOM estÃ¡ listo
    const timer = setTimeout(() => {
      initializeVideo();
    }, 500);
    
    return () => clearTimeout(timer);
  }, []);
  
  // Efecto GSAP para elementos animados en scroll
  useLayoutEffect(() => {
    const ctx = gsap.context(() => {
      ScrollTrigger.batch('.animate-on-scroll', {
        onEnter: batch =>
          gsap.to(batch, {
            opacity: 1,
            y: 0,
            stagger: 0.15,
            overwrite: true
          }),
        start: 'top bottom-=100',
        end: 'bottom top',
        markers: false
      })
    })

    return () => ctx.revert()
  }, [])

  // FunciÃ³n toggleVideo simplificada y mejorada
  const toggleVideo = (e) => {
    if (e) {
      e.preventDefault();
      e.stopPropagation();
    }
    
    console.log("Toggle Video clicked with event:", e);
    console.log("Video ref exists:", !!videoRef.current);
    console.log("Current playing state:", isVideoPlaying);
    
    if (!videoRef.current) {
      console.error("No video reference available");
      return;
    }
    
    try {
      if (isVideoPlaying) {
        // Pausar video
        videoRef.current.pause();
        console.log("Video pause command sent");
        setIsVideoPlaying(false);
      } else {
        // Reproducir video - forma simplificada
        videoRef.current.play()
          .then(() => {
            console.log("Video play successful");
            setIsVideoPlaying(true);
          })
          .catch(err => {
            console.error("Error playing video:", err);
            
            // Solo agregar listener para interacciÃ³n de usuario si es necesario
            const handleUserInteraction = () => {
              videoRef.current.play()
                .then(() => {
                  setIsVideoPlaying(true);
                  document.removeEventListener('click', handleUserInteraction);
                  console.log("Video reproducido tras interacciÃ³n del usuario");
                })
                .catch(e => console.error("Fallo en reproducciÃ³n forzada:", e));
            };
            
            document.addEventListener('click', handleUserInteraction, { once: true });
          });
      }
    } catch (error) {
      console.error("Error al cambiar estado del video:", error);
    }
  };

  // DefiniciÃ³n de servicios
  const services = {
    normal: {
      title: 'Tramboory Normal',
      description:
        'La experiencia completa con todos los servicios incluidos para una celebraciÃ³n perfecta.',
      price: '7,999',
      recommended: true,
      type: 'normal',
      items: {
        'Tiempo y Espacio': [
          {
            title: '4 Horas de DiversiÃ³n',
            description: '3.5 horas de salÃ³n + 30 min de despedida',
            included: true
          }
        ],
        'DecoraciÃ³n y PersonalizaciÃ³n': [
          {
            title: 'InvitaciÃ³n Digital',
            description: 'InvitaciÃ³n personalizada para tu evento',
            included: true
          },
          {
            title: 'DecoraciÃ³n TemÃ¡tica',
            description: 'AmbientaciÃ³n Tramboory para tu fiesta',
            included: true
          }
        ],
        'Alimentos y Bebidas': [
          {
            title: 'MenÃº Completo',
            description: 'Alimentos para niÃ±os y adultos',
            included: true
          },
          {
            title: 'Bebidas Ilimitadas',
            description: 'Refrescos, agua y cafÃ© de cortesÃ­a',
            included: true
          }
        ],
        'Entretenimiento y Personal': [
          {
            title: 'Ãrea de Juegos',
            description: 'Ludoteca y alberca de pelotas',
            included: true
          },
          {
            title: 'Ambiente Festivo',
            description: 'MÃºsica y anfitriones para animar',
            included: true
          },
          {
            title: 'Coordinador de Evento',
            description: 'Personal dedicado para tu celebraciÃ³n',
            included: true
          }
        ]
      }
    },
    matutino: {
      title: 'Tramboory Matutino',
      description:
        'Renta del espacio para eventos personalizados con la opciÃ³n de agregar servicios adicionales.',
      price: '4,999',
      recommended: false,
      type: 'matutino',
      items: {
        'Renta BÃ¡sica': [
          {
            title: 'Espacio Exclusivo',
            description: 'SalÃ³n privado para tu evento',
            included: true
          },
          {
            title: 'Mobiliario BÃ¡sico',
            description: 'Mesas y sillas incluidas',
            included: true
          },
          {
            title: 'Horario Matutino',
            description: '3 horas de evento',
            included: true
          }
        ],
        'Servicios Opcionales': [
          {
            title: 'Servicio de Alimentos',
            description: 'Personaliza el menÃº a tu gusto',
            included: false
          },
          {
            title: 'DecoraciÃ³n',
            description: 'OpciÃ³n de decorar el espacio',
            included: false
          },
          {
            title: 'Personal de Servicio',
            description: 'Meseros y personal de apoyo opcional',
            included: false
          }
        ]
      }
    }
  }

  return (
    <div className="relative min-h-screen overflow-hidden bg-gradient-to-br from-purple-950 to-indigo-950">
      {/* Primero los elementos decorativos de fondo */}
      <ParticlesBackground />
      <AnimatedBalloons />
      
      {/* Video de Fondo - AsegÃºrate de que estÃ© antes de otros elementos de contenido */}
      <BackgroundVideoComponent
        videoRef={videoRef}
        isVideoPlaying={isVideoPlaying}
        toggleVideo={toggleVideo}
      />

      {/* Contenido principal con mayor z-index para estar por encima del video */}
      <div className="relative z-10 pointer-events-none">
        {/* Navbar pÃºblico */}
        <div className="pointer-events-auto">
          <NavbarPublic />
        </div>

        {/* Hero Section */}
        <section className="relative pt-32 pb-20 px-4 sm:px-6 lg:px-8 animate-on-scroll pointer-events-auto">
          <div className="max-w-7xl mx-auto text-center">
            <motion.h1
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              className="text-5xl md:text-6xl font-extrabold text-white mb-8 font-funhouse"
            >
              Elige tu Experiencia
              <span className="block text-gradient bg-clip-text text-transparent bg-gradient-to-r from-yellow-300 to-yellow-500">Tramboory</span>
            </motion.h1>
            <motion.p
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.2 }}
              className="text-xl text-gray-300 max-w-3xl mx-auto mb-10"
            >
              Dos opciones perfectas para tu celebraciÃ³n: nuestro paquete todo
              incluido o personaliza tu evento a tu manera en horario matutino.
            </motion.p>
          </div>
        </section>

        {/* Services Section */}
        <section className="py-12 px-4 sm:px-6 lg:px-8 pointer-events-auto">
          <div className="max-w-7xl mx-auto">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              <ServiceCard {...services.normal} />
              <ServiceCard {...services.matutino} />
            </div>
          </div>
        </section>

        {/* Contact Section */}
        <section className="py-16 px-4 sm:px-6 lg:px-8 relative overflow-hidden pointer-events-auto">
          <div className="absolute inset-0 bg-gradient-to-r from-purple-800/90 to-indigo-800/90 backdrop-blur-sm" />
          <div className="max-w-7xl mx-auto relative z-10 text-center">
            <h2 className="text-3xl font-bold text-white mb-6 font-funhouse">
              Â¿Tienes dudas sobre nuestros servicios?
            </h2>
            <p className="text-white/90 text-lg mb-8">
              Nuestro equipo estÃ¡ listo para ayudarte a elegir la mejor opciÃ³n
              para tu evento
            </p>
            <div className="flex flex-col sm:flex-row justify-center gap-4">
              <button
                onClick={() => {
                  window.open("https://wa.me/523332300243?text=Hola%2C%20me%20gustar%C3%ADa%20obtener%20m%C3%A1s%20informaci%C3%B3n%20sobre%20sus%20servicios%20para%20fiestas%20infantiles.", '_blank', 'noopener,noreferrer');
                }}
                className="inline-flex items-center justify-center px-6 py-3 rounded-lg 
                        bg-white text-purple-900 font-semibold hover:bg-gray-100 
                        transition-all duration-300 transform hover:scale-105"
              >
                <FiMessageSquare className="mr-2" />
                ContÃ¡ctanos
              </button>
              <button
                onClick={() => (window.location.href = 'tel:+523332300243')}
                className="inline-flex items-center justify-center px-6 py-3 rounded-lg 
                        border-2 border-white text-white font-semibold hover:bg-white/10 
                        transition-all duration-300 transform hover:scale-105"
              >
                <FiPhone className="mr-2" />
                Llamar Ahora
              </button>
            </div>
          </div>
        </section>
      </div>
    </div>
  )
}import React, { useState, useEffect, useRef } from 'react'
import { gsap } from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger'
import 'react-responsive-carousel/lib/styles/carousel.min.css'
import { getImagenesCarousel, getPromocionesCarousel } from '@domains/galeria/services/galeriaService'
import NavbarPublic from '@shared/components/NavbarPublic'

// Componentes decorativos
import ParticlesBackground from './home-components/decorative/ParticlesBackground'
import AnimatedBalloons from './home-components/decorative/AnimatedBalloons'
import BackgroundVideoComponent from './home-components/decorative/BackgroundVideoComponent'

// Secciones de la pÃ¡gina
import HeroSection from './home-components/sections/HeroSection'
import PromotionsSection from './home-components/sections/PromotionsSection'
import ReservationStepsSection from './home-components/sections/ReservationStepsSection'
import ServicesSection from './home-components/sections/ServicesSection'
import FeaturesSection from './home-components/sections/FeaturesSection'
import GallerySection from './home-components/sections/GallerySection'
import ContactSection from './home-components/sections/ContactSection'
import FooterSection from './home-components/sections/FooterSection'

// Registrar GSAP ScrollTrigger
gsap.registerPlugin(ScrollTrigger)

/**
 * Componente principal de la pÃ¡gina de inicio
 * Modularizado para mejor mantenimiento y organizaciÃ³n
 */
const Home = () => {
  // Estados
  const [isVideoPlaying, setIsVideoPlaying] = useState(true);
  const [carouselImages, setCarouselImages] = useState([]);
  const [promocionesImages, setPromocionesImages] = useState([]);
  const [isLoadingImages, setIsLoadingImages] = useState(true);
  const [isLoadingPromociones, setIsLoadingPromociones] = useState(true);
  
  // Referencias
  const sectionRefs = {
    hero: useRef(null),
    content: useRef(null),
    video: useRef(null)
  };

  // Datos para servicios
  const services = {
    normal: {
      title: 'Tramboory Normal',
      description: 'La experiencia completa con todos los servicios incluidos para una celebraciÃ³n perfecta',
      price: '7,999',
      features: [
        {
          title: '4 Horas de DiversiÃ³n',
          description: '3.5 horas de salÃ³n + 30 min de despedida',
          icon: FiClock
        },
        {
          title: 'InvitaciÃ³n Digital',
          description: 'InvitaciÃ³n personalizada para tu evento',
          icon: FiMail
        },
        {
          title: 'DecoraciÃ³n TemÃ¡tica',
          description: 'AmbientaciÃ³n Tramboory para tu fiesta',
          icon: FiGift
        },
        {
          title: 'MenÃº Completo',
          description: 'Alimentos para niÃ±os y adultos',
          icon: FiCoffee
        },
        {
          title: 'Bebidas Ilimitadas',
          description: 'Refrescos, agua y cafÃ© de cortesÃ­a',
          icon: FiCoffee
        },
        {
          title: 'Ãrea de Juegos',
          description: 'Ludoteca y alberca de pelotas',
          icon: FiSmile
        },
        {
          title: 'Ambiente Festivo',
          description: 'MÃºsica y anfitriones para animar',
          icon: FiMusic
        },
        {
          title: 'Coordinador de Evento',
          description: 'Personal dedicado para tu celebraciÃ³n',
          icon: FiUsers
        }
      ],
      highlights: ['Todo Incluido', 'Personal Completo', 'Sin Preocupaciones'],
      recommended: true
    },
    matutino: {
      title: 'Tramboory Matutino',
      description: 'Renta del espacio para eventos personalizados con servicios opcionales',
      price: '4,999',
      features: [
        {
          title: '3 Horas de Evento',
          description: 'Horario matutino flexible',
          icon: FiClock
        },
        {
          title: 'Espacio Exclusivo',
          description: 'SalÃ³n privado para tu evento',
          icon: FiMapPin
        },
        {
          title: 'Mobiliario BÃ¡sico',
          description: 'Mesas y sillas incluidas',
          icon: FiPackage
        },
        {
          title: 'Servicios Opcionales',
          description: 'Personaliza tu experiencia',
          icon: FiStar
        }
      ],
      highlights: ['Personalizable', 'EconÃ³mico', 'Flexible'],
      recommended: false
    }
  };

  // Cargar imÃ¡genes del carrusel y promociones desde la API
  useEffect(() => {
    // FunciÃ³n para cargar imÃ¡genes del carrusel
    const loadImages = async () => {
      try {
        setIsLoadingImages(true);
        const imagenes = await getImagenesCarousel();
        
        // Ordenar por el campo orden y obtener solo las URLs de las imÃ¡genes activas
        const imageUrls = imagenes
          .filter(img => img.activo)
          .sort((a, b) => a.orden - b.orden)
          .map(img => img.imagen_url);
        
        // Usar solo las imÃ¡genes de la base de datos
        setCarouselImages(imageUrls);
      } catch (error) {
        console.error('Error cargando imÃ¡genes del carrusel:', error);
        // En caso de error, establecer un array vacÃ­o
        setCarouselImages([]);
      } finally {
        setIsLoadingImages(false);
      }
    };
    
    // FunciÃ³n para cargar promociones del mes
    const loadPromociones = async () => {
      try {
        setIsLoadingPromociones(true);
        const promociones = await getPromocionesCarousel();
        
        // Ordenar por el campo orden y obtener solo las URLs de las promociones activas
        const promoUrls = promociones
          .filter(promo => promo.activo)
          .sort((a, b) => a.orden - b.orden)
          .map(promo => promo.imagen_url);
        
        setPromocionesImages(promoUrls);
      } catch (error) {
        console.error('Error cargando promociones del mes:', error);
        setPromocionesImages([]);
      } finally {
        setIsLoadingPromociones(false);
      }
    };
    
    loadImages();
    loadPromociones();
  }, []);
  
  // Efectos para animaciones
  useEffect(() => {
    let ctx = gsap.context(() => {
      // Parallax effect para el hÃ©roe
      if (sectionRefs.content.current && sectionRefs.hero.current) {
        gsap.to(sectionRefs.content.current, {
          yPercent: 30,
          ease: 'none',
          scrollTrigger: {
            trigger: sectionRefs.hero.current,
            start: 'top top',
            end: 'bottom top',
            scrub: true
          }
        });
      }

      // Animaciones para las caracterÃ­sticas
      ScrollTrigger.batch('.feature-card', {
        onEnter: batch => gsap.to(batch, {
          opacity: 1,
          y: 0,
          stagger: 0.15,
          overwrite: true
        }),
        start: 'top bottom-=100',
        end: 'bottom top+=100',
        markers: false
      });
    });

    return () => {
      ScrollTrigger.getAll().forEach(trigger => trigger.kill());
      ctx.revert();
    };
  }, []);

  // FunciÃ³n toggleVideo mejorada
  const toggleVideo = (e) => {
    if (e) {
      e.preventDefault();
      e.stopPropagation();
    }
    
    console.log("Toggle Video clicked in Home:", !!sectionRefs.video.current);
    
    if (!sectionRefs.video.current) {
      console.error("No video reference available");
      return;
    }
    
    try {
      if (isVideoPlaying) {
        // Pausar video
        sectionRefs.video.current.pause();
        console.log("Video pausado en Home.jsx");
        setIsVideoPlaying(false);
      } else {
        // Reproducir video - forma simplificada
        sectionRefs.video.current.play()
          .then(() => {
            console.log("Video reproducido exitosamente en Home.jsx");
            setIsVideoPlaying(true);
          })
          .catch(err => {
            console.error("Error reproduciendo video en Home.jsx:", err);
            
            // Solo agregar listener para interacciÃ³n de usuario si es necesario
            const handleUserInteraction = () => {
              sectionRefs.video.current.play()
                .then(() => {
                  setIsVideoPlaying(true);
                  document.removeEventListener('click', handleUserInteraction);
                  console.log("Video reproducido tras interacciÃ³n del usuario");
                })
                .catch(e => console.error("Fallo en reproducciÃ³n forzada:", e));
            };
            
            document.addEventListener('click', handleUserInteraction, { once: true });
          });
      }
    } catch (error) {
      console.error("Error al cambiar estado del video:", error);
    }
  };

  // JSX principal
  return (
    <div className="relative min-h-screen overflow-hidden bg-gradient-to-br from-purple-950 to-indigo-950">
      {/* Elementos decorativos de fondo */}
      <ParticlesBackground />
      <AnimatedBalloons />
      
      {/* Video de Fondo */}
      <BackgroundVideoComponent
        videoRef={sectionRefs.video}
        isVideoPlaying={isVideoPlaying}
        toggleVideo={toggleVideo}
      />

      {/* Navbar pÃºblico */}
      <NavbarPublic />

      {/* Secciones principales */}
      <HeroSection sectionRefs={sectionRefs} />
      <PromotionsSection promocionesImages={promocionesImages} />
      <ReservationStepsSection />
      <ServicesSection services={services} />
      <FeaturesSection />
      <GallerySection carouselImages={carouselImages} />
      <ContactSection />
      <FooterSection />
    </div>
  );
};

// ImportaciÃ³n faltante para iconos usados en los servicios
import { 
  FiClock, 
  FiMail, 
  FiGift, 
  FiCoffee, 
  FiSmile, 
  FiMusic, 
  FiUsers, 
  FiMapPin, 
  FiPackage, 
  FiStar 
} from 'react-icons/fi';

export default Home;import React from 'react';
import Home from './Home'; // Importa el componente real de la pÃ¡gina de inicio

/**
 * Componente contenedor para la pÃ¡gina principal que agrega la clase home-public
 * Esta clase se usa para excluir la pÃ¡gina principal de los cambios de tema en modo oscuro
 */
const PublicHomeContainer = (props) => {
  return (
    <div className="home-public">
      <Home {...props} />
    </div>
  );
};

export default PublicHomeContainer; // Exportar todos los componentes de public/pages
export { default as AboutTramboory } from './AboutTramboory';
export { default as Appointment } from './Appointment';
export { default as Home } from './Home';
export { default as PublicHomeContainer } from './PublicHomeContainer';
// Agrega cualquier otra pÃ¡gina pÃºblica que tengas\n\n

=== ./public/services/index.js ===
// Exportar todos los componentes de public/services
\n\n


